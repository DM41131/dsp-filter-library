{"version":3,"file":"dsp-filter-library.min.js","sources":["../src/complex.js","../src/utils.js","../src/fft.js","../src/windows.js","../src/fir.js","../src/iir.js","../src/zdomain.js","../src/filter-class.js","../src/index.js"],"sourcesContent":["// complex.js — Complex number operations for DSP\r\n// Author: Davit Akobia <dav.akobia@gmail.com>\r\n// License: MIT\r\n\r\n/**\r\n * @typedef {{re:number, im:number}} Complex\r\n */\r\n\r\n/**\r\n * Complex number operations for digital signal processing\r\n */\r\nexport class ComplexNum {\r\n    /** @returns {Complex} */ \r\n    static of(re = 0, im = 0) { \r\n        return { re, im }; \r\n    }\r\n    \r\n    /** @returns {Complex} */ \r\n    static add(a, b) { \r\n        return { re: a.re + b.re, im: a.im + b.im }; \r\n    }\r\n    \r\n    /** @returns {Complex} */ \r\n    static sub(a, b) { \r\n        return { re: a.re - b.re, im: a.im - b.im }; \r\n    }\r\n    \r\n    /** @returns {Complex} */ \r\n    static mul(a, b) { \r\n        return { re: a.re * b.re - a.im * b.im, im: a.re * b.im + a.im * b.re }; \r\n    }\r\n    \r\n    /** @returns {Complex} */ \r\n    static scale(a, s) { \r\n        return { re: a.re * s, im: a.im * s }; \r\n    }\r\n    \r\n    /** @returns {Complex} */ \r\n    static conj(a) { \r\n        return { re: a.re, im: -a.im }; \r\n    }\r\n    \r\n    /** @returns {Complex} */ \r\n    static div(a, b) {\r\n        const d = b.re*b.re + b.im*b.im || 1e-300;\r\n        return { re: (a.re*b.re + a.im*b.im)/d, im: (a.im*b.re - a.re*b.im)/d };\r\n    }\r\n    \r\n    /** @returns {number} */ \r\n    static abs(a) { \r\n        return Math.hypot(a.re, a.im); \r\n    }\r\n    \r\n    /** @returns {number} */ \r\n    static arg(a) { \r\n        return Math.atan2(a.im, a.re); \r\n    }\r\n    \r\n    /** @returns {Complex} */ \r\n    static expj(theta) { \r\n        return { re: Math.cos(theta), im: Math.sin(theta) }; \r\n    }\r\n}\r\n\r\n// Legacy alias for backward compatibility\r\nexport const C = ComplexNum;\r\n","// utils.js — Mathematical utilities for DSP\r\n// Author: Davit Akobia <dav.akobia@gmail.com>\r\n// License: MIT\r\n\r\nimport { ComplexNum as C } from './complex.js';\r\n\r\n/**\r\n * Utility functions for digital signal processing\r\n */\r\nexport class Util {\r\n  /**\r\n   * Next power of 2 >= n.\r\n   * Uses multiplication to avoid 32-bit overflow from bit shifts.\r\n   */\r\n  static nextPow2(n) {\r\n    if (!Number.isFinite(n) || n <= 1) return 1;\r\n    let p = 1;\r\n    while (p < n) p *= 2;\r\n    return p;\r\n  }\r\n\r\n  static clamp(v, lo, hi) {\r\n    return Math.min(hi, Math.max(lo, v));\r\n  }\r\n\r\n  /**\r\n   * Inclusive linspace from start to end with n points.\r\n   * n <= 0 → []\r\n   * n = 1 → [start]\r\n   */\r\n  static linspace(start, end, n) {\r\n    if (n <= 0) return [];\r\n    if (n === 1) return [start];\r\n    const step = (end - start) / (n - 1);\r\n    return Array.from({ length: n }, (_, i) => start + i * step);\r\n  }\r\n\r\n  /**\r\n   * Horner's method.\r\n   * Coefficients c are in ASCENDING powers: y = c0 + c1*z + c2*z^2 + ...\r\n   * z may be real (number) or complex ({re, im}).\r\n   */\r\n  static polyval(c, z) {\r\n    if (typeof z === 'number') {\r\n      let y = 0;\r\n      for (let i = c.length - 1; i >= 0; i--) y = y * z + c[i];\r\n      return y;\r\n    } else {\r\n      // Complex Horner\r\n      let y = C.of(0, 0);\r\n      for (let i = c.length - 1; i >= 0; i--) {\r\n        y = C.add(C.mul(y, z), C.of(c[i], 0));\r\n      }\r\n      return y;\r\n    }\r\n  }\r\n\r\n  /** Naive linear convolution (length x+h-1). */\r\n  static convolve(x, h) {\r\n    const y = new Array(x.length + h.length - 1).fill(0);\r\n    for (let i = 0; i < x.length; i++) {\r\n      const xi = x[i];\r\n      for (let j = 0; j < h.length; j++) y[i + j] += xi * h[j];\r\n    }\r\n    return y;\r\n  }\r\n\r\n  /** Real-coefficient polynomial multiplication. */\r\n  static polymul(a, b) {\r\n    const na = a.length, nb = b.length;\r\n    const r = new Array(na + nb - 1).fill(0);\r\n    for (let i = 0; i < na; i++)\r\n      for (let j = 0; j < nb; j++)\r\n        r[i + j] += a[i] * b[j];\r\n    return r;\r\n  }\r\n\r\n  /**\r\n   * Build a real-coefficient polynomial from (possibly complex) roots.\r\n   * - Real roots contribute (x - r).\r\n   * - Complex roots contribute (x^2 - 2 Re(r) x + |r|^2).\r\n   * Robust to missing explicit conjugate: if a root has non-negligible\r\n   * imaginary part but no partner is found, we still multiply by its\r\n   * implied conjugate’s quadratic.\r\n   */\r\n  static polyfromroots(roots, tol = 1e-12) {\r\n    const used = new Array(roots.length).fill(false);\r\n    let p = [1];\r\n\r\n    for (let i = 0; i < roots.length; i++) {\r\n      if (used[i]) continue;\r\n      const r = roots[i];\r\n\r\n      // Try to find its conjugate partner\r\n      let pair = -1;\r\n      for (let j = i + 1; j < roots.length; j++) {\r\n        if (used[j]) continue;\r\n        const s = roots[j];\r\n        if (Math.abs(r.re - s.re) < tol && Math.abs(r.im + s.im) < tol) {\r\n          pair = j; break;\r\n        }\r\n      }\r\n\r\n      if (Math.abs(r.im) < 1e-14) {\r\n        // Real root\r\n        p = Util.polymul(p, [1, -r.re]);\r\n        used[i] = true;\r\n      } else if (pair >= 0) {\r\n        // Found explicit conjugate\r\n        const a2 = [1, -2 * r.re, r.re * r.re + r.im * r.im];\r\n        p = Util.polymul(p, a2);\r\n        used[i] = used[pair] = true;\r\n      } else {\r\n        // No explicit partner — multiply by the quadratic implied by conjugation\r\n        const a2 = [1, -2 * r.re, r.re * r.re + r.im * r.im];\r\n        p = Util.polymul(p, a2);\r\n        used[i] = true;\r\n      }\r\n    }\r\n    return p;\r\n  }\r\n}\r\n","// fft.js — Fast Fourier Transform operations\r\n// Author: Davit Akobia <dav.akobia@gmail.com>\r\n// License: MIT\r\n\r\nimport { ComplexNum as C } from './complex.js';\r\nimport { Util } from './utils.js';\r\n\r\n/**\r\n * Fast Fourier Transform operations for digital signal processing\r\n */\r\nexport class FFT {\r\n    /** @param {Complex[]} x */\r\n    static fft(x) {\r\n        let n = x.length;\r\n        if (n <= 1) return x;\r\n        if ((n & (n - 1)) !== 0) {\r\n            const m = Util.nextPow2(n);\r\n            return FFT.fft(x.concat(Array.from({ length: m - n }, () => C.of(0, 0))));\r\n        }\r\n        // bit-reverse\r\n        let j = 0;\r\n        for (let i = 1; i < n - 1; i++) {\r\n            let bit = n >> 1;\r\n            for (; j & bit; bit >>= 1) j ^= bit;\r\n            j ^= bit;\r\n            if (i < j) { const t = x[i]; x[i] = x[j]; x[j] = t; }\r\n        }\r\n        // stages\r\n        for (let len = 2; len <= n; len <<= 1) {\r\n            const ang = -2 * Math.PI / len;\r\n            for (let i = 0; i < n; i += len) {\r\n                for (let k = 0; k < len / 2; k++) {\r\n                    const w = C.expj(ang * k);\r\n                    const u = x[i + k];\r\n                    const v = C.mul(x[i + k + (len >> 1)], w);\r\n                    x[i + k] = C.add(u, v);\r\n                    x[i + k + (len >> 1)] = C.sub(u, v);\r\n                }\r\n            }\r\n        }\r\n        return x;\r\n    }\r\n    \r\n    /** @param {Complex[]} X */\r\n    static ifft(X) {\r\n        const n = X.length;\r\n        return FFT.fft(X.map(C.conj)).map(C.conj).map(v => C.scale(v, 1 / n));\r\n    }\r\n    \r\n    /** @param {number[]} x */\r\n    static rfft(x) {\r\n        const n = Util.nextPow2(x.length);\r\n        const a = Array.from({ length: n }, (_, i) => C.of(x[i] || 0, 0));\r\n        return FFT.fft(a);\r\n    }\r\n    \r\n    /** @param {number[]} x */\r\n    static powerSpectrum(x) {\r\n        return FFT.rfft(x).map(C.abs).map(v => v*v);\r\n    }\r\n}\r\n","// windows.js — Windowing functions for DSP\r\n// Author: Davit Akobia <dav.akobia@gmail.com>\r\n// License: MIT\r\n\r\n/**\r\n * Windowing functions for digital signal processing\r\n */\r\nexport class Window {\r\n    static rect(N) { \r\n        return Array.from({ length: N }, () => 1); \r\n    }\r\n    \r\n    static rectangle(N) { \r\n        return Window.rect(N); \r\n    }\r\n    \r\n    static hann(N) { \r\n        return Array.from({ length: N }, (_, n) => 0.5 - 0.5*Math.cos(2*Math.PI*n/(N-1))); \r\n    }\r\n    \r\n    static hamming(N) { \r\n        return Array.from({ length: N }, (_, n) => 0.54 - 0.46*Math.cos(2*Math.PI*n/(N-1))); \r\n    }\r\n    \r\n    static blackman(N) {\r\n        const a0 = 0.42, a1 = 0.5, a2 = 0.08;\r\n        return Array.from({ length: N }, (_, n) =>\r\n            a0 - a1*Math.cos(2*Math.PI*n/(N-1)) + a2*Math.cos(4*Math.PI*n/(N-1)));\r\n    }\r\n    \r\n    static blackmanHarris(N) {\r\n        const a0 = 0.35875, a1 = 0.48829, a2 = 0.14128, a3 = 0.01168;\r\n        return Array.from({ length: N }, (_, n) =>\r\n            a0 - a1*Math.cos(2*Math.PI*n/(N-1)) + a2*Math.cos(4*Math.PI*n/(N-1)) - a3*Math.cos(6*Math.PI*n/(N-1)));\r\n    }\r\n    \r\n    static blackmanNuttall(N) {\r\n        const a0 = 0.3635819, a1 = 0.4891775, a2 = 0.1365995, a3 = 0.0106411;\r\n        return Array.from({ length: N }, (_, n) =>\r\n            a0 - a1*Math.cos(2*Math.PI*n/(N-1)) + a2*Math.cos(4*Math.PI*n/(N-1)) - a3*Math.cos(6*Math.PI*n/(N-1)));\r\n    }\r\n    \r\n    static kaiser(N, beta = 8.6) {\r\n        const denom = _i0(beta), M = N - 1;\r\n        return Array.from({ length: N }, (_, n) => {\r\n            const t = (2*n)/M - 1;\r\n            return _i0(beta * Math.sqrt(1 - t*t)) / denom;\r\n        });\r\n    }\r\n    \r\n    static tukey(N, alpha = 0.5) {\r\n        const M = N - 1;\r\n        return Array.from({ length: N }, (_, n) => {\r\n            const x = n / M;\r\n            if (alpha <= 0) return 1;\r\n            if (alpha >= 1) return 0.5*(1 - Math.cos(2*Math.PI*x));\r\n            if (x < alpha/2) return 0.5*(1 + Math.cos(Math.PI*(2*x/alpha - 1)));\r\n            if (x <= 1 - alpha/2) return 1;\r\n            return 0.5*(1 + Math.cos(Math.PI*(2*x/alpha - 2/alpha + 1)));\r\n        });\r\n    }\r\n    \r\n    static gauss(N, sigma = 0.4) {\r\n        const M = N - 1, m2 = M/2;\r\n        return Array.from({ length: N }, (_, n) => {\r\n            const k = (n - m2) / (sigma * m2);\r\n            return Math.exp(-0.5*k*k);\r\n        });\r\n    }\r\n    \r\n    static bartlett(N) {\r\n        const M = N - 1;\r\n        return Array.from({ length: N }, (_, n) => 1 - Math.abs((n - M/2)/(M/2)));\r\n    }\r\n    \r\n    static bartlettHann(N) {\r\n        const M = N - 1;\r\n        return Array.from({ length: N }, (_, n) => {\r\n            const x = n / M;\r\n            return 0.62 - 0.48*Math.abs(x - 0.5) - 0.38*Math.cos(2*Math.PI*x);\r\n        });\r\n    }\r\n    \r\n    static cosine(N) {\r\n        const M = N - 1;\r\n        return Array.from({ length: N }, (_, n) => Math.sin(Math.PI*n/M));\r\n    }\r\n    \r\n    static lanczos(N) {\r\n        const M = N - 1, m2 = M/2;\r\n        const sinc = (x) => x === 0 ? 1 : Math.sin(Math.PI*x)/(Math.PI*x);\r\n        return Array.from({ length: N }, (_, n) => sinc((n - m2)/m2));\r\n    }\r\n    \r\n    static bohman(N) {\r\n        const M = N - 1, m2 = M/2;\r\n        return Array.from({ length: N }, (_, n) => {\r\n            const x = Math.abs(n - m2) / m2;\r\n            return (x <= 1) ? (1 - x)*Math.cos(Math.PI*x) + (1/Math.PI)*Math.sin(Math.PI*x) : 0;\r\n        });\r\n    }\r\n    \r\n    static flatTop(N) {\r\n        const a0 = 1.0, a1 = 1.93, a2 = 1.29, a3 = 0.388, a4 = 0.028;\r\n        const M = N - 1;\r\n        return Array.from({ length: N }, (_, n) =>\r\n            a0 - a1*Math.cos(2*Math.PI*n/M) + a2*Math.cos(4*Math.PI*n/M) -\r\n            a3*Math.cos(6*Math.PI*n/M) + a4*Math.cos(8*Math.PI*n/M)\r\n        );\r\n    }\r\n    \r\n    /** @param {keyof Window| string} name */\r\n    static byName(name, N, opts = {}) {\r\n        const { beta = 8.6, alpha = 0.5, sigma = 0.4 } = opts || {};\r\n        switch (name) {\r\n            case 'hann': return Window.hann(N);\r\n            case 'hamming': return Window.hamming(N);\r\n            case 'blackman': return Window.blackman(N);\r\n            case 'blackmanHarris': return Window.blackmanHarris(N);\r\n            case 'blackmanNuttall': return Window.blackmanNuttall(N);\r\n            case 'rectangle':\r\n            case 'rect': return Window.rect(N);\r\n            case 'bartlett': return Window.bartlett(N);\r\n            case 'bartlettHann': return Window.bartlettHann(N);\r\n            case 'cosine': return Window.cosine(N);\r\n            case 'lanczos': return Window.lanczos(N);\r\n            case 'bohman': return Window.bohman(N);\r\n            case 'gauss':\r\n            case 'gaussian': return Window.gauss(N, sigma);\r\n            case 'tukey': return Window.tukey(N, alpha);\r\n            case 'kaiser': return Window.kaiser(N, beta);\r\n            case 'flatTop':\r\n            case 'flattop': return Window.flatTop(N);\r\n            default: return Window.rect(N);\r\n        }\r\n    }\r\n}\r\n\r\n// Modified Bessel function of the first kind, order zero\r\nconst _i0 = (x) => {\r\n    const ax = Math.abs(x);\r\n    if (ax < 3.75) {\r\n        const t = x / 3.75, t2 = t*t;\r\n        return 1 + t2 * (3.5156229 + t2 * (3.0899424 + t2 * (1.2067492 +\r\n                t2 * (0.2659732 + t2 * (0.0360768 + t2 * 0.0045813)))));\r\n    } else {\r\n        const t = 3.75 / ax;\r\n        return (Math.exp(ax) / Math.sqrt(ax)) * (\r\n            0.39894228 + t * (0.01328592 + t * (0.00225319 + t * (-0.00157565 +\r\n            t * (0.00916281 + t * (-0.02057706 + t * (0.02635537 + t *\r\n            (-0.01647633 + t * 0.00392377)))))))\r\n        );\r\n    }\r\n};\r\n","// fir.js — Finite Impulse Response filter design\r\n// Author: Davit Akobia <dav.akobia@gmail.com>\r\n// License: MIT\r\n\r\nimport { ComplexNum as C } from './complex.js';\r\nimport { Util } from './utils.js';\r\nimport { FFT } from './fft.js';\r\nimport { Window } from './windows.js';\r\n\r\n/**\r\n * @typedef {\"lowpass\"|\"highpass\"|\"bandpass\"|\"bandstop\"} FiltKind\r\n * @typedef {{b:number[], a:number[]}} TF\r\n */\r\n\r\n/**\r\n * FIR filter kernels and design functions\r\n */\r\nexport class Kernels {\r\n    static sinc(x) { \r\n        return x === 0 ? 1 : Math.sin(Math.PI * x) / (Math.PI * x); \r\n    }\r\n    \r\n    static idealLowpass(fc, fs, N) {\r\n        const M = N - 1, norm = fc / fs;\r\n        return Array.from({ length: N }, (_, n) => Kernels.sinc((n - M/2) * 2 * norm));\r\n    }\r\n}\r\n\r\n/**\r\n * FIR filter designer\r\n */\r\nexport class FIRDesigner {\r\n    /**\r\n     * @param {FiltKind} kind\r\n     * @param {number|[number,number]} cutoffHz\r\n     * @param {number} fs\r\n     * @param {number} order\r\n     * @param {string} window\r\n     * @returns {TF}\r\n     */\r\n    static design(kind, cutoffHz, fs, order, window = 'hann') {\r\n        const N = order + 1;\r\n        const win = Window.byName(window, N);\r\n        const M = N - 1;\r\n        const applyWin = (h) => h.map((v, i) => v * win[i]);\r\n\r\n        if (kind === 'lowpass') {\r\n            const fc = /** @type {number} */(cutoffHz);\r\n            let h = Kernels.idealLowpass(fc, fs, N);\r\n            const scale = 2 * fc / fs;\r\n            h = h.map(v => v * scale);\r\n            return { b: applyWin(h), a: [1] };\r\n        }\r\n        if (kind === 'highpass') {\r\n            const fc = /** @type {number} */(cutoffHz);\r\n            const lp = FIRDesigner.design('lowpass', fc, fs, order, window).b;\r\n            const b = lp.map((v, n) => (n === M/2 ? 1 - v : -v));\r\n            return { b, a: [1] };\r\n        }\r\n        if (kind === 'bandpass') {\r\n            const [f1, f2] = /** @type {[number,number]} */(cutoffHz);\r\n            const lp2 = FIRDesigner.design('lowpass', f2, fs, order, window).b;\r\n            const lp1 = FIRDesigner.design('lowpass', f1, fs, order, window).b;\r\n            const b = lp2.map((v, i) => v - lp1[i]);\r\n            return { b, a: [1] };\r\n        }\r\n        if (kind === 'bandstop') {\r\n            const [f1, f2] = /** @type {[number,number]} */(cutoffHz);\r\n            const bp = FIRDesigner.design('bandpass', [f1, f2], fs, order, window).b;\r\n            const b = bp.map((v, n) => (n === M/2 ? 1 - v : -v));\r\n            return { b, a: [1] };\r\n        }\r\n        throw new Error('Unsupported FIR type');\r\n    }\r\n\r\n    static apply(b, x) { \r\n        return Util.convolve(x, b); \r\n    }\r\n\r\n    static overlapAdd(b, x, blockSize) {\r\n        const L = blockSize || 1024;\r\n        const M = b.length;\r\n        const Nfft = Util.nextPow2(L + M - 1);\r\n        const B = FFT.fft(Array.from({ length: Nfft }, (_, i) => C.of(b[i] || 0, 0)));\r\n        const y = new Array(x.length + M - 1).fill(0);\r\n        for (let start = 0; start < x.length; start += L) {\r\n            const xblk = Array.from({ length: Nfft }, (_, i) => C.of(x[start + i] || 0, 0));\r\n            const X = FFT.fft(xblk);\r\n            const Y = X.map((Xk, k) => C.mul(Xk, B[k]));\r\n            const yblk = FFT.ifft(Y);\r\n            for (let i = 0; i < L + M - 1; i++) y[start + i] += yblk[i].re;\r\n        }\r\n        return y;\r\n    }\r\n}\r\n","// iir.js — Infinite Impulse Response filter design\r\n// Author: Davit Akobia <dav.akobia@gmail.com>\r\n// License: MIT\r\n\r\nimport { ComplexNum as C } from './complex.js';\r\nimport { Util } from './utils.js';\r\nimport { FIRDesigner } from './fir.js';\r\n\r\n/**\r\n * @typedef {\"lowpass\"|\"highpass\"|\"bandpass\"|\"bandstop\"} FiltKind\r\n * @typedef {{b:number[], a:[number, number, number]}} Biquad // a = [1,a1,a2] (digital biquad)\r\n */\r\n\r\nexport class Bilinear {\r\n  /** Prewarp digital edge f(Hz) -> analog Ω (rad/s) for bilinear transform */\r\n  static prewarp(fHz, fs) {\r\n    return 2 * fs * Math.tan(Math.PI * fHz / fs);\r\n  }\r\n}\r\n\r\n/**\r\n * IIR filter designer (Butterworth, Chebyshev-I, Chebyshev-II, Linkwitz–Riley)\r\n *\r\n * Notes:\r\n * - High-pass is produced by the *analog* LP→HP transform (s → Ωc/s) before bilinear.\r\n * - Chebyshev-II interprets `cutoffHz` as the **stopband edge** (first frequency reaching `rs` dB).\r\n * - After bilinear we normalize once at z=1 (LP) or z=−1 (HP); the gain is applied to the last SOS\r\n *   for better numeric conditioning.\r\n * - Bandpass/Bandstop currently use FIR fallback (keeps API stable; can be upgraded later).\r\n */\r\nexport class IIRDesigner {\r\n  // ----------------------------- Prototype Poles -----------------------------\r\n\r\n  /** Normalized (Ωp = 1) Butterworth poles in LHP */\r\n  static butterworthPoles(n) {\r\n    const poles = [];\r\n    for (let k = 0; k < n; k++) {\r\n      const theta = Math.PI * (2 * k + 1 + n) / (2 * n);\r\n      const p = C.of(Math.cos(theta), Math.sin(theta));\r\n      if (p.re < 0) poles.push(p);\r\n    }\r\n    return poles;\r\n  }\r\n\r\n  /** Normalized (Ωp = 1) Chebyshev-I poles in LHP, rp = passband ripple (dB) */\r\n  static cheby1Poles(n, rp = 1) {\r\n    const eps = Math.sqrt(Math.pow(10, rp / 10) - 1);\r\n    const alpha = Math.asinh(1 / eps) / n;\r\n    const sinhA = Math.sinh(alpha), coshA = Math.cosh(alpha);\r\n    const poles = [];\r\n    for (let k = 0; k < n; k++) {\r\n      const theta = Math.PI * (2 * k + 1) / (2 * n);\r\n      const re = -sinhA * Math.sin(theta);\r\n      const im =  coshA * Math.cos(theta);\r\n      const p = C.of(re, im);\r\n      if (p.re < 0) poles.push(p);\r\n    }\r\n    return poles;\r\n  }\r\n\r\n  /**\r\n   * Chebyshev-II (inverse Chebyshev) LP prototype with Ωs = 1:\r\n   * returns LHP poles and positive zero frequencies (Ωz) on the jΩ axis.\r\n   * rs: stopband attenuation in dB (e.g., 40).\r\n   */\r\n  static cheby2PolesAndZeros(n, rs) {\r\n    // R = 1/ε, where ε is the inverse-Chebyshev stopband ripple parameter\r\n    const R = Math.sqrt(Math.pow(10, rs / 10) - 1);\r\n    const mu = Math.asinh(R) / n;\r\n    const sinhM = Math.sinh(mu), coshM = Math.cosh(mu);\r\n\r\n    const poles = [];\r\n    for (let k = 1; k <= n; k++) {\r\n      const theta = Math.PI * (2 * k - 1) / (2 * n);\r\n      const re = -sinhM * Math.sin(theta);\r\n      const im =  coshM * Math.cos(theta);\r\n      if (re < 0) poles.push(C.of(re, im));\r\n    }\r\n\r\n    // floor(n/2) finite zero pairs at Ωz = sec(theta_k)\r\n    const zerosW = [];\r\n    const m = Math.floor(n / 2);\r\n    for (let k = 1; k <= m; k++) {\r\n      const theta = Math.PI * (2 * k - 1) / (2 * n);\r\n      zerosW.push(1 / Math.cos(theta)); // sec(theta)\r\n    }\r\n\r\n    return { poles, zerosW };\r\n  }\r\n\r\n  // ----------------------------- Helpers ------------------------------------\r\n\r\n  /** Pair conjugates for SOS construction */\r\n  static pairConjugates(list) {\r\n    const used = new Array(list.length).fill(false);\r\n    const out = [];\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (used[i]) continue;\r\n      const p = list[i];\r\n      let pair = -1;\r\n      for (let j = i + 1; j < list.length; j++) {\r\n        if (used[j]) continue;\r\n        const q = list[j];\r\n        if (Math.abs(p.re - q.re) < 1e-12 && Math.abs(p.im + q.im) < 1e-12) { pair = j; break; }\r\n      }\r\n      if (pair >= 0) { out.push([p, list[pair]]); used[i] = used[pair] = true; }\r\n      else { out.push([p]); used[i] = true; }\r\n    }\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Analog biquad → digital biquad via bilinear (Tustin).\r\n   * (b2 s^2 + b1 s + b0) / (a2 s^2 + a1 s + a0), with s = K (1 − z⁻¹)/(1 + z⁻¹), K = 2fs.\r\n   */\r\n  static bilinearMapBiquad(b2, b1, b0, a2, a1, a0, fs) {\r\n    const K = 2 * fs;\r\n\r\n    const B0 = b2 * K * K + b1 * K + b0;\r\n    const B1 = 2 * (b0 - b2 * K * K);\r\n    const B2 = b2 * K * K - b1 * K + b0;\r\n\r\n    const A0 = a2 * K * K + a1 * K + a0;\r\n    const A1 = 2 * (a0 - a2 * K * K);\r\n    const A2 = a2 * K * K - a1 * K + a0;\r\n\r\n    return { b: [B0 / A0, B1 / A0, B2 / A0], a: [1, A1 / A0, A2 / A0] };\r\n  }\r\n\r\n  /** Evaluate H(z) at a single z0 on the unit circle from direct-form coeffs. */\r\n  static _evalHzAtZ(b, a, z0) {\r\n    const num = b.reduce((acc, bi, i) => acc + bi * Math.pow(z0, -i), 0);\r\n    const den = a.reduce((acc, ai, i) => acc + ai * Math.pow(z0, -i), 0);\r\n    return num / den;\r\n  }\r\n\r\n  /**\r\n   * Build LP/HP from normalized prototype poles using proper analog transforms,\r\n   * then bilinear; normalize digitally at z0 (DC for LP, Nyquist for HP).\r\n   */\r\n  static fromPrototype(kind, fs, polesNorm, normalizeAt, wc) {\r\n    /** @type {Biquad[]} */\r\n    const sections = [];\r\n\r\n    const pairs = IIRDesigner.pairConjugates(polesNorm);\r\n    for (const pair of pairs) {\r\n      const [p1, p2] = pair.length === 2 ? pair : [pair[0], null];\r\n\r\n      // LP (Ωp=1) quadratic\r\n      let a2_lp, a1_lp, a0_lp;\r\n      if (p2) {\r\n        a2_lp = 1;\r\n        a1_lp = -2 * p1.re;\r\n        a0_lp = p1.re * p1.re + p1.im * p1.im;\r\n      } else {\r\n        a2_lp = 0; a1_lp = 1; a0_lp = -p1.re;\r\n      }\r\n\r\n      // Transform to analog LP/HP at Ωc = wc\r\n      let A2, A1, A0; // denom\r\n      let b2, b1, b0; // numer\r\n\r\n      if (kind === 'lowpass') {\r\n        A2 = a2_lp;\r\n        A1 = a1_lp * wc;\r\n        A0 = a0_lp * wc * wc;\r\n        b2 = 0; b1 = 0; b0 = 1;              // constant numerator (LP)\r\n      } else if (kind === 'highpass') {\r\n        // s → Ωc/s\r\n        if (a2_lp !== 0) {\r\n          // second-order: a0 s^2 + a1 Ωc s + a2 Ωc^2\r\n          A2 = a0_lp;\r\n          A1 = a1_lp * wc;\r\n          A0 = a2_lp * wc * wc;\r\n          b2 = 1; b1 = 0; b0 = 0;            // s^2 ⇒ double zero at DC\r\n        } else {\r\n          // first-order: a0 s + a1 Ωc\r\n          A2 = 0;\r\n          A1 = a0_lp;\r\n          A0 = a1_lp * wc;\r\n          b2 = 0; b1 = 1; b0 = 0;            // s ⇒ single zero at DC\r\n        }\r\n      } else {\r\n        throw new Error('fromPrototype supports only lowpass/highpass');\r\n      }\r\n\r\n      sections.push(IIRDesigner.bilinearMapBiquad(b2, b1, b0, A2, A1, A0, fs));\r\n    }\r\n\r\n    // Compose polynomials, then digital normalization at z0.\r\n    let bPoly = [1], aPoly = [1];\r\n    for (const s of sections) { bPoly = Util.polymul(bPoly, s.b); aPoly = Util.polymul(aPoly, s.a); }\r\n\r\n    const g = 1 / IIRDesigner._evalHzAtZ(bPoly, aPoly, normalizeAt);\r\n    if (sections.length > 0) {\r\n      // Apply to the LAST section for better conditioning\r\n      const last = sections.length - 1;\r\n      sections[last].b = sections[last].b.map(v => v * g);\r\n    }\r\n\r\n    // Recompute polynomials after gain distribution\r\n    bPoly = [1]; aPoly = [1];\r\n    for (const s of sections) { bPoly = Util.polymul(bPoly, s.b); aPoly = Util.polymul(aPoly, s.a); }\r\n\r\n    return { b: bPoly, a: aPoly, sections };\r\n  }\r\n\r\n  // ----------------------------- Public Designers ---------------------------\r\n\r\n  /** Butterworth (LP/HP); BP/BS via FIR fallback */\r\n  static butterworth(kind, cutoffHz, fs, order) {\r\n    if (order < 1) throw new Error('Order must be >= 1');\r\n\r\n    if (kind === 'lowpass' || kind === 'highpass') {\r\n      const fc = /** @type {number} */ (cutoffHz);\r\n      const wc = Bilinear.prewarp(fc, fs);\r\n      const polesNorm = IIRDesigner.butterworthPoles(order);\r\n      const zNorm = (kind === 'lowpass') ? 1 : -1;\r\n      const tf = IIRDesigner.fromPrototype(kind, fs, polesNorm, zNorm, wc);\r\n      return { b: tf.b, a: tf.a, sections: tf.sections };\r\n    }\r\n\r\n    if (kind === 'bandpass' || kind === 'bandstop') {\r\n      const [f1, f2] = /** @type {[number, number]} */ (cutoffHz);\r\n      if (!(f1 > 0 && f2 > f1 && f2 < fs / 2)) throw new Error('Invalid band edges');\r\n      const orderFIR = Math.max(64, order * 8);\r\n      const tf = FIRDesigner.design(kind, [f1, f2], fs, orderFIR, 'hamming');\r\n      return { b: tf.b, a: tf.a, sections: [] };\r\n    }\r\n\r\n    throw new Error('Unsupported IIR kind');\r\n  }\r\n\r\n  /** Chebyshev-I (LP/HP); BP/BS via FIR fallback */\r\n  static cheby1(kind, cutoffHz, fs, order, rp = 1) {\r\n    if (order < 1) throw new Error('Order must be >= 1');\r\n\r\n    if (kind === 'lowpass' || kind === 'highpass') {\r\n      const fc = /** @type {number} */ (cutoffHz);\r\n      const wc = Bilinear.prewarp(fc, fs);\r\n      const polesNorm = IIRDesigner.cheby1Poles(order, rp);\r\n      const zNorm = (kind === 'lowpass') ? 1 : -1;\r\n      const tf = IIRDesigner.fromPrototype(kind, fs, polesNorm, zNorm, wc);\r\n      return { b: tf.b, a: tf.a, sections: tf.sections };\r\n    }\r\n\r\n    if (kind === 'bandpass' || kind === 'bandstop') {\r\n      const [f1, f2] = /** @type {[number, number]} */ (cutoffHz);\r\n      if (!(f1 > 0 && f2 > f1 && f2 < fs / 2)) throw new Error('Invalid band edges');\r\n      const orderFIR = Math.max(64, order * 8);\r\n      const tf = FIRDesigner.design(kind, [f1, f2], fs, orderFIR, 'hamming');\r\n      return { b: tf.b, a: tf.a, sections: [] };\r\n    }\r\n\r\n    throw new Error('Unsupported IIR kind');\r\n  }\r\n\r\n  /**\r\n   * Chebyshev-II (inverse Chebyshev) — **Lowpass only** here.\r\n   * `cutoffHz` is interpreted as the **stopband edge** (first frequency where attenuation reaches `rs` dB).\r\n   * Other kinds currently fallback to FIR.\r\n   */\r\n  static cheby2(kind, cutoffHz, fs, order, rs = 40) {\r\n    if (order < 1) throw new Error('Order must be >= 1');\r\n\r\n    if (kind !== 'lowpass') {\r\n      const orderFIR = Math.max(64, order * 8);\r\n      const tf = FIRDesigner.design(kind, cutoffHz, fs, orderFIR, 'hamming');\r\n      return { b: tf.b, a: tf.a, sections: [] };\r\n    }\r\n\r\n    // 1) Prototype with Ωs = 1, then scale by Ωs = prewarp(f_stop)\r\n    const fStop = /** @type {number} */ (cutoffHz);\r\n    const ws = Bilinear.prewarp(fStop, fs);\r\n\r\n    const { poles, zerosW } = IIRDesigner.cheby2PolesAndZeros(order, rs);\r\n\r\n    // Scale prototype poles and zeros by Ωs\r\n    const P = poles.map(p => C.of(p.re * ws, p.im * ws)); // analog poles\r\n    const Z = zerosW.map(wz => ws * wz);                  // analog zero freqs (±jΩz)\r\n\r\n    // 2) Build analog second-order sections; track DC numer/denom for analog gain\r\n    const pairs = IIRDesigner.pairConjugates(P);\r\n    const analogSecs = [];\r\n    const numDCs = [];\r\n    const denDCs = [];\r\n    let zi = 0;\r\n\r\n    for (const pair of pairs) {\r\n      const [p1, p2] = pair.length === 2 ? pair : [pair[0], null];\r\n\r\n      if (p2) {\r\n        // Denominator: (s − p)(s − p*) = s^2 − 2Re(p) s + |p|^2\r\n        const a2 = 1;\r\n        const a1 = -2 * p1.re;\r\n        const a0 = p1.re * p1.re + p1.im * p1.im;\r\n\r\n        // Numerator: with a zero pair at ±jΩz if available, else constant (all-pole)\r\n        let b2, b1, b0;\r\n        if (zi < Z.length) {\r\n          const wz = Z[zi++];\r\n          b2 = 1; b1 = 0; b0 = wz * wz; // (s^2 + Ωz^2)\r\n        } else {\r\n          b2 = 0; b1 = 0; b0 = 1;\r\n        }\r\n\r\n        analogSecs.push({ b2, b1, b0, a2, a1, a0 });\r\n        numDCs.push(b0);\r\n        denDCs.push(a0);\r\n      } else {\r\n        // First-order section: a1 s + a0, numerator constant\r\n        const a2 = 0, a1 = 1, a0 = -p1.re;\r\n        const b2 = 0, b1 = 0, b0 = 1;\r\n        analogSecs.push({ b2, b1, b0, a2, a1, a0 });\r\n        numDCs.push(1);\r\n        denDCs.push(a0);\r\n      }\r\n    }\r\n\r\n    // 3) Force analog DC gain to 1: G = Π a0_k / Π b0_k (apply to LAST section)\r\n    const prod = (arr) => arr.reduce((acc, v) => acc * v, 1);\r\n    const G = prod(denDCs) / prod(numDCs);\r\n    if (analogSecs.length > 0) {\r\n      const last = analogSecs.length - 1;\r\n      analogSecs[last].b2 *= G;\r\n      analogSecs[last].b1 *= G;\r\n      analogSecs[last].b0 *= G;\r\n    }\r\n\r\n    // 4) Bilinear-map each analog section\r\n    /** @type {Biquad[]} */\r\n    const sections = analogSecs.map(s =>\r\n      IIRDesigner.bilinearMapBiquad(s.b2, s.b1, s.b0, s.a2, s.a1, s.a0, fs)\r\n    );\r\n\r\n    // 5) Compose → final b,a (a0 should be 1)\r\n    let b = [1], a = [1];\r\n    for (const s of sections) { b = Util.polymul(b, s.b); a = Util.polymul(a, s.a); }\r\n\r\n    // 6) Digital DC normalization (should already be ~1, but keep it exact)\r\n    const gDig = 1 / IIRDesigner._evalHzAtZ(b, a, 1);\r\n    if (sections.length > 0) {\r\n      const last = sections.length - 1;\r\n      sections[last].b = sections[last].b.map(v => v * gDig);\r\n    }\r\n    b = [1]; a = [1];\r\n    for (const s of sections) { b = Util.polymul(b, s.b); a = Util.polymul(a, s.a); }\r\n\r\n    return { b, a, sections };\r\n  }\r\n\r\n  /**\r\n   * Linkwitz–Riley (even order only): cascade of two same-order Butterworth filters.\r\n   * Example: order=4 → two 2nd-order Butterworths cascaded.\r\n   */\r\n  static linkwitzRiley(kind, cutoffHz, fs, orderEven = 4) {\r\n    if (orderEven < 2) throw new Error('Order must be >= 2');\r\n    const even = (orderEven % 2 === 0) ? orderEven : (orderEven + 1);\r\n    const half = even / 2;\r\n\r\n    const base = IIRDesigner.butterworth(kind, cutoffHz, fs, half);\r\n    const sections = base.sections.concat(base.sections.map(s => ({ b: s.b.slice(), a: s.a.slice() })));\r\n    const b = Util.polymul(base.b, base.b);\r\n    const a = Util.polymul(base.a, base.a);\r\n    return { b, a, sections };\r\n  }\r\n}\r\n","// zdomain.js — Z-domain operations for DSP\r\n// Author: Davit Akobia <dav.akobia@gmail.com>\r\n// License: MIT\r\n\r\nimport { ComplexNum as C } from './complex.js';\r\nimport { Util } from './utils.js';\r\n\r\n/**\r\n * @typedef {{w:number[], H:Complex[], mag:number[], phase:number[]}} FreqResponse\r\n */\r\n\r\n/**\r\n * Z-domain operations for digital signal processing\r\n */\r\nexport class ZDomain {\r\n    /** @returns {Complex} */\r\n    static evalHz(b, a, z) {\r\n        const zinv = C.div(C.of(1,0), z);\r\n        const pow = (k) => {\r\n            let p = C.of(1,0);\r\n            for (let i = 0; i < k; i++) p = C.mul(p, zinv);\r\n            return p;\r\n        };\r\n        let num = C.of(0,0);\r\n        for (let k = 0; k < b.length; k++) num = C.add(num, C.scale(pow(k), b[k]));\r\n        let den = C.of(1,0);\r\n        for (let k = 1; k < a.length; k++) den = C.add(den, C.scale(pow(k), a[k]));\r\n        return C.div(num, den);\r\n    }\r\n    \r\n    /** @returns {FreqResponse} */\r\n    static freqz(b, a, N = 512) {\r\n        const w = Util.linspace(0, Math.PI, N);\r\n        const H = w.map(wi => ZDomain.evalHz(b, a, C.expj(wi)));\r\n        const mag = H.map(C.abs);\r\n        const phase = H.map(C.arg);\r\n        return { w, H, mag, phase };\r\n    }\r\n    \r\n    static groupDelay(b, a, N = 512) {\r\n        const { w, phase } = ZDomain.freqz(b, a, N);\r\n        const unwrapped = [...phase];\r\n        for (let i = 1; i < unwrapped.length; i++) {\r\n            let d = unwrapped[i] - unwrapped[i-1];\r\n            while (d > Math.PI) { unwrapped[i] -= 2*Math.PI; d -= 2*Math.PI; }\r\n            while (d < -Math.PI) { unwrapped[i] += 2*Math.PI; d += 2*Math.PI; }\r\n        }\r\n        const dw = w[1] - w[0];\r\n        const gd = unwrapped.map((_, i) => (i === 0 || i === unwrapped.length - 1) ? 0\r\n            : -(unwrapped[i+1] - unwrapped[i-1]) / (2*dw));\r\n        return { w, gd };\r\n    }\r\n    \r\n    static isStable(/* a */) { \r\n        return true; // placeholder\r\n    }\r\n}\r\n","// filter-class.js — Main Filter class and operations\r\n// Author: Davit Akobia <dav.akobia@gmail.com>\r\n// License: MIT\r\n\r\nimport { ComplexNum as C } from './complex.js';\r\nimport { FIRDesigner } from './fir.js';\r\nimport { IIRDesigner } from './iir.js';\r\nimport { ZDomain } from './zdomain.js';\r\n\r\nexport class Filter {\r\n    constructor(b, a = [1], sections = []) {\r\n        if (Math.abs(a[0] - 1) > 1e-12) {\r\n            b = b.map(v => v / a[0]);\r\n            a = a.map(v => v / a[0]);\r\n        }\r\n        this.b = b.slice();\r\n        this.a = a.slice();\r\n        this.sections = (sections || []).map(s => ({ b: s.b.slice(), a: [1, s.a[1], s.a[2]] }));\r\n\r\n        if (this.sections.length > 0) {\r\n            this._sosState = this.sections.map(() => ({ w1: 0, w2: 0 }));\r\n        } else if (this.a.length === 1) {\r\n            this._firIdx = 0;\r\n            this._firBuf = new Array(this.b.length).fill(0);\r\n        } else {\r\n            const N = Math.max(this.b.length, this.a.length) - 1;\r\n            this._iirW = new Array(N).fill(0);\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        if (this._sosState) this._sosState.forEach(s => { s.w1 = 0; s.w2 = 0; });\r\n        if (this._firBuf) this._firBuf.fill(0), this._firIdx = 0;\r\n        if (this._iirW) this._iirW.fill(0);\r\n    }\r\n\r\n    processSample(x) {\r\n        if (this.sections.length > 0) {\r\n            let v = x;\r\n            for (let i = 0; i < this.sections.length; i++) {\r\n                const { b, a } = this.sections[i];\r\n                const st = this._sosState[i];\r\n                const w0 = v - a[1]*st.w1 - a[2]*st.w2;\r\n                const y0 = b[0]*w0 + b[1]*st.w1 + b[2]*st.w2;\r\n                st.w2 = st.w1; st.w1 = w0;\r\n                v = y0;\r\n            }\r\n            return v;\r\n        }\r\n\r\n        if (this.a.length === 1) {\r\n            this._firBuf[this._firIdx] = x;\r\n            let y = 0, idx = this._firIdx;\r\n            for (let k = 0; k < this.b.length; k++) {\r\n                y += this.b[k] * this._firBuf[idx];\r\n                idx = (idx - 1 + this._firBuf.length) % this._firBuf.length;\r\n            }\r\n            this._firIdx = (this._firIdx + 1) % this._firBuf.length;\r\n            return y;\r\n        }\r\n\r\n        let wn = x;\r\n        for (let k = 1; k < this.a.length; k++) wn -= this.a[k] * (this._iirW[k-1] || 0);\r\n        let yn = this.b[0]*wn;\r\n        for (let k = 1; k < this.b.length; k++) yn += (this._iirW[k-1] || 0) * this.b[k];\r\n        for (let k = this._iirW.length-1; k > 0; k--) this._iirW[k] = this._iirW[k-1];\r\n        this._iirW[0] = wn;\r\n        return yn;\r\n    }\r\n\r\n    applySignal(x) {\r\n        const y = new Array(x.length);\r\n        for (let i=0;i<x.length;i++) y[i] = this.processSample(x[i]);\r\n        return y;\r\n    }\r\n\r\n    frequencyResponse(fs, N = 1024) {\r\n        const fr = ZDomain.freqz(this.b, this.a, N);\r\n        const f = fr.w.map(w => w * fs / (2*Math.PI));\r\n        return { f, mag: fr.mag, phase: fr.phase, H: fr.H };\r\n    }\r\n\r\n    toJSON(){ \r\n        return { b: this.b.slice(), a: this.a.slice() }; \r\n    }\r\n\r\n    static fromTF(b,a){ \r\n        return new Filter(b,a); \r\n    }\r\n    \r\n    static designFIR(kind, cutoffHz, fs, order, window='hann'){\r\n        const tf = FIRDesigner.design(kind, cutoffHz, fs, order, window);\r\n        return new Filter(tf.b, tf.a);\r\n    }\r\n    \r\n    static designButter(kind, cutoffHz, fs, order){\r\n        const result = IIRDesigner.butterworth(kind, cutoffHz, fs, order);\r\n        return new Filter(result.b, result.a, result.sections);\r\n    }\r\n    \r\n    static designCheby1(kind, cutoffHz, fs, order, rp=1){\r\n        const result = IIRDesigner.cheby1(kind, cutoffHz, fs, order, rp);\r\n        return new Filter(result.b, result.a, result.sections);\r\n    }\r\n    \r\n    static designCheby2(kind, cutoffHz, fs, order, rs = 40) {\r\n        const result = IIRDesigner.cheby2(kind, cutoffHz, fs, order, rs);\r\n        return new Filter(result.b, result.a, result.sections);\r\n    }\r\n\r\n    static designLinkwitzRiley(kind, cutoffHz, fs, orderEven = 4) {\r\n        const result = IIRDesigner.linkwitzRiley(kind, cutoffHz, fs, orderEven);\r\n        return new Filter(result.b, result.a, result.sections);\r\n    }\r\n}\r\n","// index.js — Main entry point for DSP library\r\n// Author: Davit Akobia <dav.akobia@gmail.com>\r\n// License: MIT\r\n\r\n// Core modules\r\nexport { ComplexNum, C } from './complex.js';\r\nexport { Util } from './utils.js';\r\nexport { FFT } from './fft.js';\r\nexport { Window } from './windows.js';\r\nexport { Kernels, FIRDesigner } from './fir.js';\r\nexport { Bilinear, IIRDesigner } from './iir.js';\r\nexport { ZDomain } from './zdomain.js';\r\n\r\n// Main Filter class\r\nexport { Filter } from './filter-class.js';\r\n\r\n// Import for internal use\r\nimport { ComplexNum, C } from './complex.js';\r\nimport { Util } from './utils.js';\r\nimport { FFT } from './fft.js';\r\nimport { Window } from './windows.js';\r\nimport { Kernels, FIRDesigner } from './fir.js';\r\nimport { Bilinear, IIRDesigner } from './iir.js';\r\nimport { ZDomain } from './zdomain.js';\r\nimport { Filter } from './filter-class.js';\r\n\r\n// Backward compatibility namespaces\r\nexport const FIR = {\r\n    design: (kind, cutoffHz, fs, order, window='hann') => {\r\n        return FIRDesigner.design(kind, cutoffHz, fs, order, window);\r\n    },\r\n    apply: (b, x) => {\r\n        return FIRDesigner.apply(b, x);\r\n    },\r\n    overlapAdd: (b,x,blockSize) => {\r\n        return FIRDesigner.overlapAdd(b,x,blockSize);\r\n    },\r\n};\r\n\r\nexport const IIR = {\r\n    butterworth: (kind, cutoffHz, fs, order) => {\r\n        const result = IIRDesigner.butterworth(kind, cutoffHz, fs, order);\r\n        return { b: result.b, a: result.a };\r\n    },\r\n    cheby1: (kind, cutoffHz, fs, order, rp=1) => {\r\n        const result = IIRDesigner.cheby1(kind, cutoffHz, fs, order, rp);\r\n        return { b: result.b, a: result.a };\r\n    },\r\n    cheby2: (kind, cutoffHz, fs, order, rs=40) => {\r\n        const result = IIRDesigner.cheby2(kind, cutoffHz, fs, order, rs);\r\n        return { b: result.b, a: result.a };\r\n    },\r\n    linkwitzRiley: (kind, cutoffHz, fs, orderEven=4) => {\r\n        const result = IIRDesigner.linkwitzRiley(kind, cutoffHz, fs, orderEven);\r\n        return { b: result.b, a: result.a };\r\n    },\r\n    apply: (b, a, x) => {\r\n        return Filter.fromTF(b,a).applySignal(x);\r\n    },\r\n};\r\n\r\nexport const Z = {\r\n    evalHz: (b,a,z) => ZDomain.evalHz(b,a,z),\r\n    freqz: (b,a,N=512) => ZDomain.freqz(b,a,N),\r\n    groupDelay: (b,a,N=512) => ZDomain.groupDelay(b,a,N),\r\n    isStable: () => ZDomain.isStable(),\r\n};\r\n\r\n// Default export\r\nexport default {\r\n    // Core classes\r\n    ComplexNum, C,\r\n    Util, FFT, Window, Kernels,\r\n    FIRDesigner, IIRDesigner, Bilinear,\r\n    ZDomain, Filter,\r\n    // Backward compatibility\r\n    FIR, IIR, Z,\r\n};\r\n"],"names":["ComplexNum","of","re","im","add","a","b","sub","mul","scale","s","conj","div","d","abs","Math","hypot","arg","atan2","expj","theta","cos","sin","C","Util","nextPow2","n","Number","isFinite","p","clamp","v","lo","hi","min","max","linspace","start","end","step","Array","from","length","_","i","polyval","c","z","y","convolve","x","h","fill","xi","j","polymul","na","nb","r","polyfromroots","roots","tol","used","pair","a2","FFT","fft","m","concat","bit","t","len","ang","PI","k","w","u","ifft","X","map","rfft","powerSpectrum","Window","rect","N","rectangle","hann","hamming","blackman","blackmanHarris","blackmanNuttall","kaiser","beta","denom","_i0","M","sqrt","tukey","alpha","gauss","sigma","m2","exp","bartlett","bartlettHann","cosine","lanczos","sinc","bohman","flatTop","byName","name","opts","ax","t2","Kernels","idealLowpass","fc","fs","norm","FIRDesigner","design","kind","cutoffHz","order","window","win","applyWin","f1","f2","lp2","lp1","Error","apply","overlapAdd","blockSize","L","Nfft","B","xblk","Y","Xk","yblk","Bilinear","prewarp","fHz","tan","IIRDesigner","butterworthPoles","poles","push","cheby1Poles","rp","eps","pow","asinh","sinhA","sinh","coshA","cosh","cheby2PolesAndZeros","rs","R","mu","sinhM","coshM","zerosW","floor","pairConjugates","list","out","q","bilinearMapBiquad","b2","b1","b0","a1","a0","K","A0","_evalHzAtZ","z0","reduce","acc","bi","ai","fromPrototype","polesNorm","normalizeAt","wc","sections","pairs","p1","p2","a2_lp","a1_lp","a0_lp","A2","A1","bPoly","aPoly","g","last","butterworth","zNorm","tf","orderFIR","cheby1","cheby2","fStop","ws","P","Z","wz","analogSecs","numDCs","denDCs","zi","prod","arr","G","gDig","linkwitzRiley","orderEven","half","base","slice","ZDomain","evalHz","zinv","num","den","freqz","H","wi","mag","phase","groupDelay","unwrapped","dw","gd","isStable","Filter","constructor","this","_sosState","w1","w2","_firIdx","_firBuf","_iirW","reset","forEach","processSample","st","w0","y0","idx","wn","yn","applySignal","frequencyResponse","fr","f","toJSON","fromTF","designFIR","designButter","result","designCheby1","designCheby2","designLinkwitzRiley","FIR","IIR","index"],"mappings":"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"}