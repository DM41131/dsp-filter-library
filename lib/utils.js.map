{"version":3,"file":"utils.js","sources":["../src/utils.js"],"sourcesContent":["// utils.js — Mathematical utilities for DSP\r\n// Author: Davit Akobia <dav.akobia@gmail.com>\r\n// License: MIT\r\n\r\nimport { ComplexNum as C } from './complex.js';\r\n\r\n/**\r\n * Utility functions for digital signal processing\r\n */\r\nexport class Util {\r\n  /**\r\n   * Next power of 2 >= n.\r\n   * Uses multiplication to avoid 32-bit overflow from bit shifts.\r\n   */\r\n  static nextPow2(n) {\r\n    if (!Number.isFinite(n) || n <= 1) return 1;\r\n    let p = 1;\r\n    while (p < n) p *= 2;\r\n    return p;\r\n  }\r\n\r\n  static clamp(v, lo, hi) {\r\n    return Math.min(hi, Math.max(lo, v));\r\n  }\r\n\r\n  /**\r\n   * Inclusive linspace from start to end with n points.\r\n   * n <= 0 → []\r\n   * n = 1 → [start]\r\n   */\r\n  static linspace(start, end, n) {\r\n    if (n <= 0) return [];\r\n    if (n === 1) return [start];\r\n    const step = (end - start) / (n - 1);\r\n    return Array.from({ length: n }, (_, i) => start + i * step);\r\n  }\r\n\r\n  /**\r\n   * Horner's method.\r\n   * Coefficients c are in ASCENDING powers: y = c0 + c1*z + c2*z^2 + ...\r\n   * z may be real (number) or complex ({re, im}).\r\n   */\r\n  static polyval(c, z) {\r\n    if (typeof z === 'number') {\r\n      let y = 0;\r\n      for (let i = c.length - 1; i >= 0; i--) y = y * z + c[i];\r\n      return y;\r\n    } else {\r\n      // Complex Horner\r\n      let y = C.of(0, 0);\r\n      for (let i = c.length - 1; i >= 0; i--) {\r\n        y = C.add(C.mul(y, z), C.of(c[i], 0));\r\n      }\r\n      return y;\r\n    }\r\n  }\r\n\r\n  /** Naive linear convolution (length x+h-1). */\r\n  static convolve(x, h) {\r\n    const y = new Array(x.length + h.length - 1).fill(0);\r\n    for (let i = 0; i < x.length; i++) {\r\n      const xi = x[i];\r\n      for (let j = 0; j < h.length; j++) y[i + j] += xi * h[j];\r\n    }\r\n    return y;\r\n  }\r\n\r\n  /** Real-coefficient polynomial multiplication. */\r\n  static polymul(a, b) {\r\n    const na = a.length, nb = b.length;\r\n    const r = new Array(na + nb - 1).fill(0);\r\n    for (let i = 0; i < na; i++)\r\n      for (let j = 0; j < nb; j++)\r\n        r[i + j] += a[i] * b[j];\r\n    return r;\r\n  }\r\n\r\n  /**\r\n   * Build a real-coefficient polynomial from (possibly complex) roots.\r\n   * - Real roots contribute (x - r).\r\n   * - Complex roots contribute (x^2 - 2 Re(r) x + |r|^2).\r\n   * Robust to missing explicit conjugate: if a root has non-negligible\r\n   * imaginary part but no partner is found, we still multiply by its\r\n   * implied conjugate’s quadratic.\r\n   */\r\n  static polyfromroots(roots, tol = 1e-12) {\r\n    const used = new Array(roots.length).fill(false);\r\n    let p = [1];\r\n\r\n    for (let i = 0; i < roots.length; i++) {\r\n      if (used[i]) continue;\r\n      const r = roots[i];\r\n\r\n      // Try to find its conjugate partner\r\n      let pair = -1;\r\n      for (let j = i + 1; j < roots.length; j++) {\r\n        if (used[j]) continue;\r\n        const s = roots[j];\r\n        if (Math.abs(r.re - s.re) < tol && Math.abs(r.im + s.im) < tol) {\r\n          pair = j; break;\r\n        }\r\n      }\r\n\r\n      if (Math.abs(r.im) < 1e-14) {\r\n        // Real root\r\n        p = Util.polymul(p, [1, -r.re]);\r\n        used[i] = true;\r\n      } else if (pair >= 0) {\r\n        // Found explicit conjugate\r\n        const a2 = [1, -2 * r.re, r.re * r.re + r.im * r.im];\r\n        p = Util.polymul(p, a2);\r\n        used[i] = used[pair] = true;\r\n      } else {\r\n        // No explicit partner — multiply by the quadratic implied by conjugation\r\n        const a2 = [1, -2 * r.re, r.re * r.re + r.im * r.im];\r\n        p = Util.polymul(p, a2);\r\n        used[i] = true;\r\n      }\r\n    }\r\n    return p;\r\n  }\r\n}\r\n"],"names":["C"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACO,MAAM,IAAI,CAAC;AAClB;AACA;AACA;AACA;AACA,EAAE,OAAO,QAAQ,CAAC,CAAC,EAAE;AACrB,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;AAChD,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACzB,IAAI,OAAO,CAAC,CAAC;AACb,EAAE,CAAC;AACH;AACA,EAAE,OAAO,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;AAC1B,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACzC,EAAE,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,EAAE;AACjC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC;AAC1B,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;AAChC,IAAI,MAAM,IAAI,GAAG,CAAC,GAAG,GAAG,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACzC,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;AACjE,EAAE,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;AACvB,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;AAC/B,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;AAChB,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,MAAM,OAAO,CAAC,CAAC;AACf,IAAI,CAAC,MAAM;AACX;AACA,MAAM,IAAI,CAAC,GAAGA,UAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzB,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,CAAC,GAAGA,UAAC,CAAC,GAAG,CAACA,UAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEA,UAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9C,MAAM,CAAC;AACP,MAAM,OAAO,CAAC,CAAC;AACf,IAAI,CAAC;AACL,EAAE,CAAC;AACH;AACA;AACA,EAAE,OAAO,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;AACxB,IAAI,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACzD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvC,MAAM,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,IAAI,CAAC;AACL,IAAI,OAAO,CAAC,CAAC;AACb,EAAE,CAAC;AACH;AACA;AACA,EAAE,OAAO,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;AACvB,IAAI,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;AACvC,IAAI,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;AAC/B,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;AACjC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,IAAI,OAAO,CAAC,CAAC;AACb,EAAE,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,aAAa,CAAC,KAAK,EAAE,GAAG,GAAG,KAAK,EAAE;AAC3C,IAAI,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrD,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAChB;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,SAAS;AAC5B,MAAM,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACzB;AACA;AACA,MAAM,IAAI,IAAI,GAAG,EAAE,CAAC;AACpB,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjD,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,SAAS;AAC9B,QAAQ,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3B,QAAQ,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE;AACxE,UAAU,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM;AAC1B,QAAQ,CAAC;AACT,MAAM,CAAC;AACP;AACA,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE;AAClC;AACA,QAAQ,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxC,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACvB,MAAM,CAAC,MAAM,IAAI,IAAI,IAAI,CAAC,EAAE;AAC5B;AACA,QAAQ,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7D,QAAQ,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAChC,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AACpC,MAAM,CAAC,MAAM;AACb;AACA,QAAQ,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7D,QAAQ,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAChC,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACvB,MAAM,CAAC;AACP,IAAI,CAAC;AACL,IAAI,OAAO,CAAC,CAAC;AACb,EAAE,CAAC;AACH;;;;"}