{"version":3,"file":"chebyshev-type2-filter.cjs","sources":["../src/chebyshev-type2-filter.js"],"sourcesContent":["// chebyshev-type2-filter.js — Chebyshev Type II (Inverse Chebyshev) IIR design\n// Author: Davit Akobia <dav.akobia@gmail.com>\n// License: MIT\n\nimport { ComplexNum as C } from './complex.js';\nimport { BaseIIRFilter } from './base-iir-filter.js';\n\n/**\n * Chebyshev Type II (monotonic passband, equiripple stopband)\n * @typedef {\"lowpass\"|\"highpass\"|\"bandpass\"|\"bandstop\"} FilterKind\n */\nexport class ChebyshevType2Filter {\n  /**\n   * @param {FilterKind} kind\n   * @param {number|number[]} cutoffHz\n   * @param {number} fs\n   * @param {number} order\n   * @param {number} rs Stopband attenuation (dB), e.g. 40\n   */\n  static design(kind, cutoffHz, fs, order = 4, rs = 40) {\n    if (order < 1) throw new Error('Chebyshev-II order must be >= 1');\n    // ε2 defined so that |H(jΩ)| = 1 / sqrt(1 + 1/ε2^2) at Ω = 1 (start of stopband)\n    const eps2 = 1 / Math.sqrt(Math.pow(10, rs / 10) - 1);\n    const asinh = (x) => Math.log(x + Math.sqrt(x * x + 1));\n    const beta = asinh(1 / eps2) / order;\n\n    const p = [];\n    const z = [];\n    for (let k = 1; k <= order; k++) {\n      const theta = Math.PI * (2 * k - 1) / (2 * order);\n      const sigma = -Math.sinh(beta) * Math.sin(theta);\n      const omega =  Math.cosh(beta) * Math.cos(theta);\n      p.push({ re: sigma, im: omega });\n      // Finite zeros on jΩ axis for Type II:\n      const cz = 1 / Math.cos(theta);\n      z.push({ re: 0, im:  cz });\n      z.push({ re: 0, im: -cz });\n    }\n    // The zero count should not exceed the pole count; duplicate pairs are ok\n    // Scale will be handled by BaseIIRFilter normalization step\n    const k = 1;\n    return BaseIIRFilter.realize(kind, cutoffHz, fs, { z, p, k });\n  }\n}\nexport default ChebyshevType2Filter;\n"],"names":["BaseIIRFilter"],"mappings":";;;;;;;;AAAA;AACA;AACA;;;AAKA;AACA;AACA;AACA;AACO,MAAM,oBAAoB,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE;AACxD,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC;AACrE;AACA,IAAI,MAAM,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;AACzD,IAAI,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3D,IAAI,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK;;AAExC,IAAI,MAAM,CAAC,GAAG,EAAE;AAChB,IAAI,MAAM,CAAC,GAAG,EAAE;AAChB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;AACrC,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;AACvD,MAAM,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;AACtD,MAAM,MAAM,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;AACtD,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC;AACtC;AACA,MAAM,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;AACpC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;AAChC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;AAChC,IAAI;AACJ;AACA;AACA,IAAI,MAAM,CAAC,GAAG,CAAC;AACf,IAAI,OAAOA,2BAAa,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACjE,EAAE;AACF;;;;;"}