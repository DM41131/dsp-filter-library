{"version":3,"file":"dsp-filter-library.esm.min.js","sources":["../src/complex.js","../src/utils.js","../src/fft.js","../src/windows.js","../src/fir.js","../src/iir.js","../src/zdomain.js","../src/filter-class.js","../src/index.js"],"sourcesContent":["// complex.js — Complex number operations for DSP\r\n// License: MIT\r\n\r\n/**\r\n * @typedef {{re:number, im:number}} Complex\r\n */\r\n\r\n/**\r\n * Complex number operations for digital signal processing\r\n */\r\nexport class ComplexNum {\r\n    /** @returns {Complex} */ \r\n    static of(re = 0, im = 0) { \r\n        return { re, im }; \r\n    }\r\n    \r\n    /** @returns {Complex} */ \r\n    static add(a, b) { \r\n        return { re: a.re + b.re, im: a.im + b.im }; \r\n    }\r\n    \r\n    /** @returns {Complex} */ \r\n    static sub(a, b) { \r\n        return { re: a.re - b.re, im: a.im - b.im }; \r\n    }\r\n    \r\n    /** @returns {Complex} */ \r\n    static mul(a, b) { \r\n        return { re: a.re * b.re - a.im * b.im, im: a.re * b.im + a.im * b.re }; \r\n    }\r\n    \r\n    /** @returns {Complex} */ \r\n    static scale(a, s) { \r\n        return { re: a.re * s, im: a.im * s }; \r\n    }\r\n    \r\n    /** @returns {Complex} */ \r\n    static conj(a) { \r\n        return { re: a.re, im: -a.im }; \r\n    }\r\n    \r\n    /** @returns {Complex} */ \r\n    static div(a, b) {\r\n        const d = b.re*b.re + b.im*b.im || 1e-300;\r\n        return { re: (a.re*b.re + a.im*b.im)/d, im: (a.im*b.re - a.re*b.im)/d };\r\n    }\r\n    \r\n    /** @returns {number} */ \r\n    static abs(a) { \r\n        return Math.hypot(a.re, a.im); \r\n    }\r\n    \r\n    /** @returns {number} */ \r\n    static arg(a) { \r\n        return Math.atan2(a.im, a.re); \r\n    }\r\n    \r\n    /** @returns {Complex} */ \r\n    static expj(theta) { \r\n        return { re: Math.cos(theta), im: Math.sin(theta) }; \r\n    }\r\n}\r\n\r\n// Legacy alias for backward compatibility\r\nexport const C = ComplexNum;\r\n","// utils.js — Mathematical utilities for DSP\r\n// License: MIT\r\n\r\nimport { ComplexNum as C } from './complex.js';\r\n\r\n/**\r\n * Utility functions for digital signal processing\r\n */\r\nexport class Util {\r\n    static nextPow2(n) { \r\n        let p = 1; \r\n        while (p < n) p <<= 1; \r\n        return p; \r\n    }\r\n    \r\n    static clamp(v, lo, hi) { \r\n        return Math.min(hi, Math.max(lo, v)); \r\n    }\r\n    \r\n    static linspace(start, end, n) {\r\n        if (n <= 1) return [start];\r\n        const step = (end - start) / (n - 1);\r\n        return Array.from({ length: n }, (_, i) => start + i * step);\r\n    }\r\n    \r\n    /** Horner's method for real or complex polynomial evaluation */\r\n    static polyval(c, z) {\r\n        if (typeof z === 'number') {\r\n            let y = 0;\r\n            for (let i = 0; i < c.length; i++) y = y * z + c[i];\r\n            return y;\r\n        } else {\r\n            let y = C.of(0, 0);\r\n            for (let i = 0; i < c.length; i++) y = C.add(C.mul(y, z), C.of(c[i], 0));\r\n            return y;\r\n        }\r\n    }\r\n    \r\n    static convolve(x, h) {\r\n        const y = new Array(x.length + h.length - 1).fill(0);\r\n        for (let i = 0; i < x.length; i++) {\r\n            const xi = x[i];\r\n            for (let j = 0; j < h.length; j++) y[i + j] += xi * h[j];\r\n        }\r\n        return y;\r\n    }\r\n    \r\n    static polymul(a, b) {\r\n        const na = a.length, nb = b.length;\r\n        const r = new Array(na + nb - 1).fill(0);\r\n        for (let i = 0; i < na; i++)\r\n            for (let j = 0; j < nb; j++)\r\n                r[i + j] += a[i] * b[j];\r\n        return r;\r\n    }\r\n    \r\n    /** Real-coefficient polynomial from complex roots (pairs conjugates) */\r\n    static polyfromroots(roots) {\r\n        const used = new Array(roots.length).fill(false);\r\n        let p = [1];\r\n        for (let i = 0; i < roots.length; i++) {\r\n            if (used[i]) continue;\r\n            const r = roots[i];\r\n            let paired = -1;\r\n            for (let j = i + 1; j < roots.length; j++) {\r\n                if (used[j]) continue;\r\n                const s = roots[j];\r\n                if (Math.abs(r.re - s.re) < 1e-12 && Math.abs(r.im + s.im) < 1e-12) { \r\n                    paired = j; \r\n                    break; \r\n                }\r\n            }\r\n            if (Math.abs(r.im) < 1e-14 || paired < 0) {\r\n                p = Util.polymul(p, [1, -r.re]);\r\n                used[i] = true;\r\n            } else {\r\n                const a2 = [1, -2*r.re, r.re*r.re + r.im*r.im];\r\n                p = Util.polymul(p, a2);\r\n                used[i] = used[paired] = true;\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n}\r\n","// fft.js — Fast Fourier Transform operations\r\n// License: MIT\r\n\r\nimport { ComplexNum as C } from './complex.js';\r\nimport { Util } from './utils.js';\r\n\r\n/**\r\n * Fast Fourier Transform operations for digital signal processing\r\n */\r\nexport class FFT {\r\n    /** @param {Complex[]} x */\r\n    static fft(x) {\r\n        let n = x.length;\r\n        if (n <= 1) return x;\r\n        if ((n & (n - 1)) !== 0) {\r\n            const m = Util.nextPow2(n);\r\n            return FFT.fft(x.concat(Array.from({ length: m - n }, () => C.of(0, 0))));\r\n        }\r\n        // bit-reverse\r\n        let j = 0;\r\n        for (let i = 1; i < n - 1; i++) {\r\n            let bit = n >> 1;\r\n            for (; j & bit; bit >>= 1) j ^= bit;\r\n            j ^= bit;\r\n            if (i < j) { const t = x[i]; x[i] = x[j]; x[j] = t; }\r\n        }\r\n        // stages\r\n        for (let len = 2; len <= n; len <<= 1) {\r\n            const ang = -2 * Math.PI / len;\r\n            for (let i = 0; i < n; i += len) {\r\n                for (let k = 0; k < len / 2; k++) {\r\n                    const w = C.expj(ang * k);\r\n                    const u = x[i + k];\r\n                    const v = C.mul(x[i + k + (len >> 1)], w);\r\n                    x[i + k] = C.add(u, v);\r\n                    x[i + k + (len >> 1)] = C.sub(u, v);\r\n                }\r\n            }\r\n        }\r\n        return x;\r\n    }\r\n    \r\n    /** @param {Complex[]} X */\r\n    static ifft(X) {\r\n        const n = X.length;\r\n        return FFT.fft(X.map(C.conj)).map(C.conj).map(v => C.scale(v, 1 / n));\r\n    }\r\n    \r\n    /** @param {number[]} x */\r\n    static rfft(x) {\r\n        const n = Util.nextPow2(x.length);\r\n        const a = Array.from({ length: n }, (_, i) => C.of(x[i] || 0, 0));\r\n        return FFT.fft(a);\r\n    }\r\n    \r\n    /** @param {number[]} x */\r\n    static powerSpectrum(x) {\r\n        return FFT.rfft(x).map(C.abs).map(v => v*v);\r\n    }\r\n}\r\n","// windows.js — Windowing functions for DSP\r\n// License: MIT\r\n\r\n/**\r\n * Windowing functions for digital signal processing\r\n */\r\nexport class Window {\r\n    static rect(N) { \r\n        return Array.from({ length: N }, () => 1); \r\n    }\r\n    \r\n    static rectangle(N) { \r\n        return Window.rect(N); \r\n    }\r\n    \r\n    static hann(N) { \r\n        return Array.from({ length: N }, (_, n) => 0.5 - 0.5*Math.cos(2*Math.PI*n/(N-1))); \r\n    }\r\n    \r\n    static hamming(N) { \r\n        return Array.from({ length: N }, (_, n) => 0.54 - 0.46*Math.cos(2*Math.PI*n/(N-1))); \r\n    }\r\n    \r\n    static blackman(N) {\r\n        const a0 = 0.42, a1 = 0.5, a2 = 0.08;\r\n        return Array.from({ length: N }, (_, n) =>\r\n            a0 - a1*Math.cos(2*Math.PI*n/(N-1)) + a2*Math.cos(4*Math.PI*n/(N-1)));\r\n    }\r\n    \r\n    static blackmanHarris(N) {\r\n        const a0 = 0.35875, a1 = 0.48829, a2 = 0.14128, a3 = 0.01168;\r\n        return Array.from({ length: N }, (_, n) =>\r\n            a0 - a1*Math.cos(2*Math.PI*n/(N-1)) + a2*Math.cos(4*Math.PI*n/(N-1)) - a3*Math.cos(6*Math.PI*n/(N-1)));\r\n    }\r\n    \r\n    static blackmanNuttall(N) {\r\n        const a0 = 0.3635819, a1 = 0.4891775, a2 = 0.1365995, a3 = 0.0106411;\r\n        return Array.from({ length: N }, (_, n) =>\r\n            a0 - a1*Math.cos(2*Math.PI*n/(N-1)) + a2*Math.cos(4*Math.PI*n/(N-1)) - a3*Math.cos(6*Math.PI*n/(N-1)));\r\n    }\r\n    \r\n    static kaiser(N, beta = 8.6) {\r\n        const denom = _i0(beta), M = N - 1;\r\n        return Array.from({ length: N }, (_, n) => {\r\n            const t = (2*n)/M - 1;\r\n            return _i0(beta * Math.sqrt(1 - t*t)) / denom;\r\n        });\r\n    }\r\n    \r\n    static tukey(N, alpha = 0.5) {\r\n        const M = N - 1;\r\n        return Array.from({ length: N }, (_, n) => {\r\n            const x = n / M;\r\n            if (alpha <= 0) return 1;\r\n            if (alpha >= 1) return 0.5*(1 - Math.cos(2*Math.PI*x));\r\n            if (x < alpha/2) return 0.5*(1 + Math.cos(Math.PI*(2*x/alpha - 1)));\r\n            if (x <= 1 - alpha/2) return 1;\r\n            return 0.5*(1 + Math.cos(Math.PI*(2*x/alpha - 2/alpha + 1)));\r\n        });\r\n    }\r\n    \r\n    static gauss(N, sigma = 0.4) {\r\n        const M = N - 1, m2 = M/2;\r\n        return Array.from({ length: N }, (_, n) => {\r\n            const k = (n - m2) / (sigma * m2);\r\n            return Math.exp(-0.5*k*k);\r\n        });\r\n    }\r\n    \r\n    static bartlett(N) {\r\n        const M = N - 1;\r\n        return Array.from({ length: N }, (_, n) => 1 - Math.abs((n - M/2)/(M/2)));\r\n    }\r\n    \r\n    static bartlettHann(N) {\r\n        const M = N - 1;\r\n        return Array.from({ length: N }, (_, n) => {\r\n            const x = n / M;\r\n            return 0.62 - 0.48*Math.abs(x - 0.5) - 0.38*Math.cos(2*Math.PI*x);\r\n        });\r\n    }\r\n    \r\n    static cosine(N) {\r\n        const M = N - 1;\r\n        return Array.from({ length: N }, (_, n) => Math.sin(Math.PI*n/M));\r\n    }\r\n    \r\n    static lanczos(N) {\r\n        const M = N - 1, m2 = M/2;\r\n        const sinc = (x) => x === 0 ? 1 : Math.sin(Math.PI*x)/(Math.PI*x);\r\n        return Array.from({ length: N }, (_, n) => sinc((n - m2)/m2));\r\n    }\r\n    \r\n    static bohman(N) {\r\n        const M = N - 1, m2 = M/2;\r\n        return Array.from({ length: N }, (_, n) => {\r\n            const x = Math.abs(n - m2) / m2;\r\n            return (x <= 1) ? (1 - x)*Math.cos(Math.PI*x) + (1/Math.PI)*Math.sin(Math.PI*x) : 0;\r\n        });\r\n    }\r\n    \r\n    static flatTop(N) {\r\n        const a0 = 1.0, a1 = 1.93, a2 = 1.29, a3 = 0.388, a4 = 0.028;\r\n        const M = N - 1;\r\n        return Array.from({ length: N }, (_, n) =>\r\n            a0 - a1*Math.cos(2*Math.PI*n/M) + a2*Math.cos(4*Math.PI*n/M) -\r\n            a3*Math.cos(6*Math.PI*n/M) + a4*Math.cos(8*Math.PI*n/M)\r\n        );\r\n    }\r\n    \r\n    /** @param {keyof Window| string} name */\r\n    static byName(name, N, opts = {}) {\r\n        const { beta = 8.6, alpha = 0.5, sigma = 0.4 } = opts || {};\r\n        switch (name) {\r\n            case 'hann': return Window.hann(N);\r\n            case 'hamming': return Window.hamming(N);\r\n            case 'blackman': return Window.blackman(N);\r\n            case 'blackmanHarris': return Window.blackmanHarris(N);\r\n            case 'blackmanNuttall': return Window.blackmanNuttall(N);\r\n            case 'rectangle':\r\n            case 'rect': return Window.rect(N);\r\n            case 'bartlett': return Window.bartlett(N);\r\n            case 'bartlettHann': return Window.bartlettHann(N);\r\n            case 'cosine': return Window.cosine(N);\r\n            case 'lanczos': return Window.lanczos(N);\r\n            case 'bohman': return Window.bohman(N);\r\n            case 'gauss':\r\n            case 'gaussian': return Window.gauss(N, sigma);\r\n            case 'tukey': return Window.tukey(N, alpha);\r\n            case 'kaiser': return Window.kaiser(N, beta);\r\n            case 'flatTop':\r\n            case 'flattop': return Window.flatTop(N);\r\n            default: return Window.rect(N);\r\n        }\r\n    }\r\n}\r\n\r\n// Modified Bessel function of the first kind, order zero\r\nconst _i0 = (x) => {\r\n    const ax = Math.abs(x);\r\n    if (ax < 3.75) {\r\n        const t = x / 3.75, t2 = t*t;\r\n        return 1 + t2 * (3.5156229 + t2 * (3.0899424 + t2 * (1.2067492 +\r\n                t2 * (0.2659732 + t2 * (0.0360768 + t2 * 0.0045813)))));\r\n    } else {\r\n        const t = 3.75 / ax;\r\n        return (Math.exp(ax) / Math.sqrt(ax)) * (\r\n            0.39894228 + t * (0.01328592 + t * (0.00225319 + t * (-0.00157565 +\r\n            t * (0.00916281 + t * (-0.02057706 + t * (0.02635537 + t *\r\n            (-0.01647633 + t * 0.00392377)))))))\r\n        );\r\n    }\r\n};\r\n","// fir.js — Finite Impulse Response filter design\r\n// License: MIT\r\n\r\nimport { ComplexNum as C } from './complex.js';\r\nimport { Util } from './utils.js';\r\nimport { FFT } from './fft.js';\r\nimport { Window } from './windows.js';\r\n\r\n/**\r\n * @typedef {\"lowpass\"|\"highpass\"|\"bandpass\"|\"bandstop\"} FiltKind\r\n * @typedef {{b:number[], a:number[]}} TF\r\n */\r\n\r\n/**\r\n * FIR filter kernels and design functions\r\n */\r\nexport class Kernels {\r\n    static sinc(x) { \r\n        return x === 0 ? 1 : Math.sin(Math.PI * x) / (Math.PI * x); \r\n    }\r\n    \r\n    static idealLowpass(fc, fs, N) {\r\n        const M = N - 1, norm = fc / fs;\r\n        return Array.from({ length: N }, (_, n) => Kernels.sinc((n - M/2) * 2 * norm));\r\n    }\r\n}\r\n\r\n/**\r\n * FIR filter designer\r\n */\r\nexport class FIRDesigner {\r\n    /**\r\n     * @param {FiltKind} kind\r\n     * @param {number|[number,number]} cutoffHz\r\n     * @param {number} fs\r\n     * @param {number} order\r\n     * @param {string} window\r\n     * @returns {TF}\r\n     */\r\n    static design(kind, cutoffHz, fs, order, window = 'hann') {\r\n        const N = order + 1;\r\n        const win = Window.byName(window, N);\r\n        const M = N - 1;\r\n        const applyWin = (h) => h.map((v, i) => v * win[i]);\r\n\r\n        if (kind === 'lowpass') {\r\n            const fc = /** @type {number} */(cutoffHz);\r\n            let h = Kernels.idealLowpass(fc, fs, N);\r\n            const scale = 2 * fc / fs;\r\n            h = h.map(v => v * scale);\r\n            return { b: applyWin(h), a: [1] };\r\n        }\r\n        if (kind === 'highpass') {\r\n            const fc = /** @type {number} */(cutoffHz);\r\n            const lp = FIRDesigner.design('lowpass', fc, fs, order, window).b;\r\n            const b = lp.map((v, n) => (n === M/2 ? 1 - v : -v));\r\n            return { b, a: [1] };\r\n        }\r\n        if (kind === 'bandpass') {\r\n            const [f1, f2] = /** @type {[number,number]} */(cutoffHz);\r\n            const lp2 = FIRDesigner.design('lowpass', f2, fs, order, window).b;\r\n            const lp1 = FIRDesigner.design('lowpass', f1, fs, order, window).b;\r\n            const b = lp2.map((v, i) => v - lp1[i]);\r\n            return { b, a: [1] };\r\n        }\r\n        if (kind === 'bandstop') {\r\n            const [f1, f2] = /** @type {[number,number]} */(cutoffHz);\r\n            const bp = FIRDesigner.design('bandpass', [f1, f2], fs, order, window).b;\r\n            const b = bp.map((v, n) => (n === M/2 ? 1 - v : -v));\r\n            return { b, a: [1] };\r\n        }\r\n        throw new Error('Unsupported FIR type');\r\n    }\r\n\r\n    static apply(b, x) { \r\n        return Util.convolve(x, b); \r\n    }\r\n\r\n    static overlapAdd(b, x, blockSize) {\r\n        const L = blockSize || 1024;\r\n        const M = b.length;\r\n        const Nfft = Util.nextPow2(L + M - 1);\r\n        const B = FFT.fft(Array.from({ length: Nfft }, (_, i) => C.of(b[i] || 0, 0)));\r\n        const y = new Array(x.length + M - 1).fill(0);\r\n        for (let start = 0; start < x.length; start += L) {\r\n            const xblk = Array.from({ length: Nfft }, (_, i) => C.of(x[start + i] || 0, 0));\r\n            const X = FFT.fft(xblk);\r\n            const Y = X.map((Xk, k) => C.mul(Xk, B[k]));\r\n            const yblk = FFT.ifft(Y);\r\n            for (let i = 0; i < L + M - 1; i++) y[start + i] += yblk[i].re;\r\n        }\r\n        return y;\r\n    }\r\n}\r\n","// iir.js — Infinite Impulse Response filter design\r\n// License: MIT\r\n\r\nimport { ComplexNum as C } from './complex.js';\r\nimport { Util } from './utils.js';\r\nimport { FIRDesigner } from './fir.js';\r\n\r\n/**\r\n * @typedef {\"lowpass\"|\"highpass\"|\"bandpass\"|\"bandstop\"} FiltKind\r\n * @typedef {{b:number[], a:[number, number, number]}} Biquad // a = [1,a1,a2]\r\n */\r\n\r\n/**\r\n * Bilinear transformation utilities\r\n */\r\nexport class Bilinear {\r\n    /** prewarp digital edge f(Hz) -> analog Ω(rad/s) */\r\n    static prewarp(fHz, fs) { \r\n        return 2 * fs * Math.tan(Math.PI * fHz / fs); \r\n    }\r\n}\r\n\r\n/**\r\n * IIR filter designer (Butterworth & Chebyshev I)\r\n */\r\nexport class IIRDesigner {\r\n    // ---- Butterworth poles (normalized) ----\r\n    static butterworthPoles(n) {\r\n        const poles = [];\r\n        for (let k = 0; k < n; k++) {\r\n            const theta = Math.PI * (2*k + 1 + n) / (2*n);\r\n            const p = C.of(Math.cos(theta), Math.sin(theta));\r\n            if (p.re < 0) poles.push(p);\r\n        }\r\n        return poles;\r\n    }\r\n\r\n    // ---- Chebyshev I poles (normalized), rp in dB ----\r\n    static cheby1Poles(n, rp = 1) {\r\n        const eps = Math.sqrt(Math.pow(10, rp / 10) - 1);\r\n        const asinh = (x) => Math.log(x + Math.sqrt(x*x + 1));\r\n        const alpha = asinh(1/eps) / n;\r\n        const sinhA = Math.sinh(alpha), coshA = Math.cosh(alpha);\r\n        const poles = [];\r\n        for (let k = 0; k < n; k++) {\r\n            const theta = Math.PI * (2*k + 1) / (2*n);\r\n            const re = -sinhA * Math.sin(theta);\r\n            const im =  coshA * Math.cos(theta);\r\n            const p = C.of(re, im);\r\n            if (p.re < 0) poles.push(p);\r\n        }\r\n        return poles;\r\n    }\r\n\r\n    static pairConjugates(list) {\r\n        const used = new Array(list.length).fill(false);\r\n        const out = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (used[i]) continue;\r\n            const p = list[i];\r\n            let pair = -1;\r\n            for (let j = i + 1; j < list.length; j++) {\r\n                if (used[j]) continue;\r\n                const q = list[j];\r\n                if (Math.abs(p.re - q.re) < 1e-12 && Math.abs(p.im + q.im) < 1e-12) { \r\n                    pair = j; \r\n                    break; \r\n                }\r\n            }\r\n            if (pair >= 0) { \r\n                out.push([p, list[pair]]); \r\n                used[i] = used[pair] = true; \r\n            }\r\n            else { \r\n                out.push([p]); \r\n                used[i] = true; \r\n            }\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /** Build digital biquad from analog a2 s^2 + a1 s + a0 via bilinear; numerator shaped by kind (LP/HP). */\r\n    static bilinearBiquad(a2, a1, a0, kind, fs) {\r\n        const T = 1 / fs;\r\n        const K = 2 / T;\r\n        // Denominator mapping\r\n        const d0 = a2*K*K + a1*K + a0;\r\n        const d1 = -2*a2*K*K + 2*a0;\r\n        const d2 = a2*K*K - a1*K + a0;\r\n        /** @type {[number,number,number]} */ const a = [1, d1/d0, d2/d0];\r\n\r\n        // Numerator prototype (cascaded then globally normalized)\r\n        let b;\r\n        if (kind === 'lowpass') b = [1, 2, 1];\r\n        else if (kind === 'highpass') b = [1, -2, 1];\r\n        else b = [1, 0, -1]; // not used (BP/BS via FIR fallback)\r\n        return { b, a };\r\n    }\r\n\r\n    /** Convert poles -> cascade of biquads (SOS), then polynomial and global gain normalization. */\r\n    static fromPrototype(kind, fs, poles, normalizeAt /* 1| -1 */) {\r\n        /** @type {Biquad[]} */\r\n        const sections = [];\r\n\r\n        const pairs = IIRDesigner.pairConjugates(poles);\r\n        for (const pair of pairs) {\r\n            const [p1, p2] = pair.length === 2 ? pair : [pair[0], null];\r\n            // Analog quadratic a2 s^2 + a1 s + a0\r\n            let a2, a1, a0;\r\n            if (p2) {\r\n                const Re2 = -2 * p1.re; // (s - p)(s - p*) = s^2 - 2Re(p)s + |p|^2\r\n                const mag2 = p1.re*p1.re + p1.im*p1.im;\r\n                a2 = 1; a1 = Re2; a0 = mag2;\r\n            } else {\r\n                // single pole (odd order)\r\n                a2 = 0; a1 = 1; a0 = -p1.re;\r\n            }\r\n            sections.push(IIRDesigner.bilinearBiquad(a2, a1, a0, kind, fs));\r\n        }\r\n\r\n        // Build overall polynomials (for compatibility) & normalize global gain\r\n        let bPoly = [1], aPoly = [1];\r\n        for (const s of sections) {\r\n            bPoly = Util.polymul(bPoly, s.b);\r\n            aPoly = Util.polymul(aPoly, s.a);\r\n        }\r\n        const evalHzAtZ = (b, a, z0) => {\r\n            const num = b.reduce((acc, bi, i) => acc + bi * Math.pow(z0, -i), 0);\r\n            const den = a.reduce((acc, ai, i) => acc + ai * Math.pow(z0, -i), 0);\r\n            return num / den;\r\n        };\r\n        const z0 = normalizeAt;\r\n        const g = 1 / evalHzAtZ(bPoly, aPoly, z0);\r\n        bPoly = bPoly.map(v => v * g);\r\n        for (const s of sections) s.b = s.b.map(v => v * g); // distribute gain across first section is typical; here we scale all equally\r\n        // normalize a[0] = 1\r\n        const gain = aPoly[0];\r\n        if (Math.abs(gain - 1) > 1e-14) {\r\n            bPoly = bPoly.map(v => v / gain);\r\n            aPoly = aPoly.map(v => v / gain);\r\n            for (const s of sections) {\r\n                s.b = s.b.map(v => v / gain);\r\n                s.a = [1, s.a[1]/gain, s.a[2]/gain];\r\n            }\r\n        }\r\n\r\n        return { b: bPoly, a: aPoly, sections };\r\n    }\r\n\r\n    /** Butterworth (LP/HP); BP/BS -> FIR fallback */\r\n    static butterworth(kind, cutoffHz, fs, order) {\r\n        if (order < 1) throw new Error('Order must be >= 1');\r\n        if (kind === 'lowpass' || kind === 'highpass') {\r\n            const fc = /** @type {number} */(cutoffHz);\r\n            const pre = Bilinear.prewarp(fc, fs);\r\n            const poles = IIRDesigner.butterworthPoles(order).map(p => C.scale(p, pre));\r\n            const normZ = (kind === 'lowpass') ? 1 : -1;\r\n            const tf = IIRDesigner.fromPrototype(kind, fs, poles, normZ);\r\n            return { b: tf.b, a: tf.a, sections: tf.sections };\r\n        }\r\n        if (kind === 'bandpass' || kind === 'bandstop') {\r\n            const [f1, f2] = /** @type {[number,number]} */(cutoffHz);\r\n            if (!(f1 > 0 && f2 > f1 && f2 < fs/2)) throw new Error('Invalid band edges');\r\n            const orderFIR = Math.max(64, order * 8);\r\n            const tf = FIRDesigner.design(kind, [f1, f2], fs, orderFIR, 'hamming');\r\n            return { b: tf.b, a: tf.a, sections: [] }; // FIR\r\n        }\r\n        throw new Error('Unsupported IIR kind');\r\n    }\r\n\r\n    /** Chebyshev Type I (LP/HP); BP/BS -> FIR fallback */\r\n    static cheby1(kind, cutoffHz, fs, order, rp = 1) {\r\n        if (order < 1) throw new Error('Order must be >= 1');\r\n        if (kind === 'lowpass' || kind === 'highpass') {\r\n            const fc = /** @type {number} */(cutoffHz);\r\n            const pre = Bilinear.prewarp(fc, fs);\r\n            const poles = IIRDesigner.cheby1Poles(order, rp).map(p => C.scale(p, pre));\r\n            const normZ = (kind === 'lowpass') ? 1 : -1;\r\n            const tf = IIRDesigner.fromPrototype(kind, fs, poles, normZ);\r\n            return { b: tf.b, a: tf.a, sections: tf.sections };\r\n        }\r\n        if (kind === 'bandpass' || kind === 'bandstop') {\r\n            const [f1, f2] = /** @type {[number,number]} */(cutoffHz);\r\n            if (!(f1 > 0 && f2 > f1 && f2 < fs/2)) throw new Error('Invalid band edges');\r\n            const orderFIR = Math.max(64, order * 8);\r\n            const tf = FIRDesigner.design(kind, [f1, f2], fs, orderFIR, 'hamming');\r\n            return { b: tf.b, a: tf.a, sections: [] };\r\n        }\r\n        throw new Error('Unsupported IIR kind');\r\n    }\r\n}\r\n","// zdomain.js — Z-domain operations for DSP\r\n// License: MIT\r\n\r\nimport { ComplexNum as C } from './complex.js';\r\nimport { Util } from './utils.js';\r\n\r\n/**\r\n * @typedef {{w:number[], H:Complex[], mag:number[], phase:number[]}} FreqResponse\r\n */\r\n\r\n/**\r\n * Z-domain operations for digital signal processing\r\n */\r\nexport class ZDomain {\r\n    /** @returns {Complex} */\r\n    static evalHz(b, a, z) {\r\n        const zinv = C.div(C.of(1,0), z);\r\n        const pow = (k) => {\r\n            let p = C.of(1,0);\r\n            for (let i = 0; i < k; i++) p = C.mul(p, zinv);\r\n            return p;\r\n        };\r\n        let num = C.of(0,0);\r\n        for (let k = 0; k < b.length; k++) num = C.add(num, C.scale(pow(k), b[k]));\r\n        let den = C.of(1,0);\r\n        for (let k = 1; k < a.length; k++) den = C.add(den, C.scale(pow(k), a[k]));\r\n        return C.div(num, den);\r\n    }\r\n    \r\n    /** @returns {FreqResponse} */\r\n    static freqz(b, a, N = 512) {\r\n        const w = Util.linspace(0, Math.PI, N);\r\n        const H = w.map(wi => ZDomain.evalHz(b, a, C.expj(wi)));\r\n        const mag = H.map(C.abs);\r\n        const phase = H.map(C.arg);\r\n        return { w, H, mag, phase };\r\n    }\r\n    \r\n    static groupDelay(b, a, N = 512) {\r\n        const { w, phase } = ZDomain.freqz(b, a, N);\r\n        const unwrapped = [...phase];\r\n        for (let i = 1; i < unwrapped.length; i++) {\r\n            let d = unwrapped[i] - unwrapped[i-1];\r\n            while (d > Math.PI) { unwrapped[i] -= 2*Math.PI; d -= 2*Math.PI; }\r\n            while (d < -Math.PI) { unwrapped[i] += 2*Math.PI; d += 2*Math.PI; }\r\n        }\r\n        const dw = w[1] - w[0];\r\n        const gd = unwrapped.map((_, i) => (i === 0 || i === unwrapped.length - 1) ? 0\r\n            : -(unwrapped[i+1] - unwrapped[i-1]) / (2*dw));\r\n        return { w, gd };\r\n    }\r\n    \r\n    static isStable(/* a */) { \r\n        return true; // placeholder\r\n    }\r\n}\r\n","// filter-class.js — Main Filter class and operations\r\n// License: MIT\r\n\r\nimport { ComplexNum as C } from './complex.js';\r\nimport { FIRDesigner } from './fir.js';\r\nimport { IIRDesigner } from './iir.js';\r\nimport { ZDomain } from './zdomain.js';\r\n\r\nexport class Filter {\r\n    constructor(b, a = [1], sections = []) {\r\n        if (Math.abs(a[0] - 1) > 1e-12) {\r\n            b = b.map(v => v / a[0]);\r\n            a = a.map(v => v / a[0]);\r\n        }\r\n        this.b = b.slice();\r\n        this.a = a.slice();\r\n        this.sections = (sections || []).map(s => ({ b: s.b.slice(), a: [1, s.a[1], s.a[2]] }));\r\n\r\n        if (this.sections.length > 0) {\r\n            this._sosState = this.sections.map(() => ({ w1: 0, w2: 0 }));\r\n        } else if (this.a.length === 1) {\r\n            this._firIdx = 0;\r\n            this._firBuf = new Array(this.b.length).fill(0);\r\n        } else {\r\n            const N = Math.max(this.b.length, this.a.length) - 1;\r\n            this._iirW = new Array(N).fill(0);\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        if (this._sosState) this._sosState.forEach(s => { s.w1 = 0; s.w2 = 0; });\r\n        if (this._firBuf) this._firBuf.fill(0), this._firIdx = 0;\r\n        if (this._iirW) this._iirW.fill(0);\r\n    }\r\n\r\n    processSample(x) {\r\n        if (this.sections.length > 0) {\r\n            let v = x;\r\n            for (let i = 0; i < this.sections.length; i++) {\r\n                const { b, a } = this.sections[i];\r\n                const st = this._sosState[i];\r\n                const w0 = v - a[1]*st.w1 - a[2]*st.w2;\r\n                const y0 = b[0]*w0 + b[1]*st.w1 + b[2]*st.w2;\r\n                st.w2 = st.w1; st.w1 = w0;\r\n                v = y0;\r\n            }\r\n            return v;\r\n        }\r\n\r\n        if (this.a.length === 1) {\r\n            this._firBuf[this._firIdx] = x;\r\n            let y = 0, idx = this._firIdx;\r\n            for (let k = 0; k < this.b.length; k++) {\r\n                y += this.b[k] * this._firBuf[idx];\r\n                idx = (idx - 1 + this._firBuf.length) % this._firBuf.length;\r\n            }\r\n            this._firIdx = (this._firIdx + 1) % this._firBuf.length;\r\n            return y;\r\n        }\r\n\r\n        let wn = x;\r\n        for (let k = 1; k < this.a.length; k++) wn -= this.a[k] * (this._iirW[k-1] || 0);\r\n        let yn = this.b[0]*wn;\r\n        for (let k = 1; k < this.b.length; k++) yn += (this._iirW[k-1] || 0) * this.b[k];\r\n        for (let k = this._iirW.length-1; k > 0; k--) this._iirW[k] = this._iirW[k-1];\r\n        this._iirW[0] = wn;\r\n        return yn;\r\n    }\r\n\r\n    applySignal(x) {\r\n        const y = new Array(x.length);\r\n        for (let i=0;i<x.length;i++) y[i] = this.processSample(x[i]);\r\n        return y;\r\n    }\r\n\r\n    frequencyResponse(fs, N = 1024) {\r\n        const fr = ZDomain.freqz(this.b, this.a, N);\r\n        const f = fr.w.map(w => w * fs / (2*Math.PI));\r\n        return { f, mag: fr.mag, phase: fr.phase, H: fr.H };\r\n    }\r\n\r\n    toJSON(){ \r\n        return { b: this.b.slice(), a: this.a.slice() }; \r\n    }\r\n\r\n    static fromTF(b,a){ \r\n        return new Filter(b,a); \r\n    }\r\n    \r\n    static designFIR(kind, cutoffHz, fs, order, window='hann'){\r\n        const tf = FIRDesigner.design(kind, cutoffHz, fs, order, window);\r\n        return new Filter(tf.b, tf.a);\r\n    }\r\n    \r\n    static designButter(kind, cutoffHz, fs, order){\r\n        const result = IIRDesigner.butterworth(kind, cutoffHz, fs, order);\r\n        return new Filter(result.b, result.a, result.sections);\r\n    }\r\n    \r\n    static designCheby1(kind, cutoffHz, fs, order, rp=1){\r\n        const result = IIRDesigner.cheby1(kind, cutoffHz, fs, order, rp);\r\n        return new Filter(result.b, result.a, result.sections);\r\n    }\r\n}\r\n","// index.js — Main entry point for DSP library\r\n// License: MIT\r\n\r\n// Core modules\r\nexport { ComplexNum, C } from './complex.js';\r\nexport { Util } from './utils.js';\r\nexport { FFT } from './fft.js';\r\nexport { Window } from './windows.js';\r\nexport { Kernels, FIRDesigner } from './fir.js';\r\nexport { Bilinear, IIRDesigner } from './iir.js';\r\nexport { ZDomain } from './zdomain.js';\r\n\r\n// Main Filter class\r\nexport { Filter } from './filter-class.js';\r\n\r\n// Import for internal use\r\nimport { ComplexNum, C } from './complex.js';\r\nimport { Util } from './utils.js';\r\nimport { FFT } from './fft.js';\r\nimport { Window } from './windows.js';\r\nimport { Kernels, FIRDesigner } from './fir.js';\r\nimport { Bilinear, IIRDesigner } from './iir.js';\r\nimport { ZDomain } from './zdomain.js';\r\nimport { Filter } from './filter-class.js';\r\n\r\n// Backward compatibility namespaces\r\nexport const FIR = {\r\n    design: (kind, cutoffHz, fs, order, window='hann') => {\r\n        return FIRDesigner.design(kind, cutoffHz, fs, order, window);\r\n    },\r\n    apply: (b, x) => {\r\n        return FIRDesigner.apply(b, x);\r\n    },\r\n    overlapAdd: (b,x,blockSize) => {\r\n        return FIRDesigner.overlapAdd(b,x,blockSize);\r\n    },\r\n};\r\n\r\nexport const IIR = {\r\n    butterworth: (kind, cutoffHz, fs, order) => {\r\n        const result = IIRDesigner.butterworth(kind, cutoffHz, fs, order);\r\n        return { b: result.b, a: result.a };\r\n    },\r\n    cheby1: (kind, cutoffHz, fs, order, rp=1) => {\r\n        const result = IIRDesigner.cheby1(kind, cutoffHz, fs, order, rp);\r\n        return { b: result.b, a: result.a };\r\n    },\r\n    apply: (b, a, x) => {\r\n        return Filter.fromTF(b,a).applySignal(x);\r\n    },\r\n};\r\n\r\nexport const Z = {\r\n    evalHz: (b,a,z) => ZDomain.evalHz(b,a,z),\r\n    freqz: (b,a,N=512) => ZDomain.freqz(b,a,N),\r\n    groupDelay: (b,a,N=512) => ZDomain.groupDelay(b,a,N),\r\n    isStable: () => ZDomain.isStable(),\r\n};\r\n\r\n// Default export\r\nexport default {\r\n    // Core classes\r\n    ComplexNum, C,\r\n    Util, FFT, Window, Kernels,\r\n    FIRDesigner, IIRDesigner, Bilinear,\r\n    ZDomain, Filter,\r\n    // Backward compatibility\r\n    FIR, IIR, Z,\r\n};\r\n"],"names":["ComplexNum","of","re","im","add","a","b","sub","mul","scale","s","conj","div","d","abs","Math","hypot","arg","atan2","expj","theta","cos","sin","C","Util","nextPow2","n","p","clamp","v","lo","hi","min","max","linspace","start","end","step","Array","from","length","_","i","polyval","c","z","y","convolve","x","h","fill","xi","j","polymul","na","nb","r","polyfromroots","roots","used","paired","a2","FFT","fft","m","concat","bit","t","len","ang","PI","k","w","u","ifft","X","map","rfft","powerSpectrum","Window","rect","N","rectangle","hann","hamming","blackman","blackmanHarris","blackmanNuttall","kaiser","beta","denom","_i0","M","sqrt","tukey","alpha","gauss","sigma","m2","exp","bartlett","bartlettHann","cosine","lanczos","sinc","bohman","flatTop","byName","name","opts","ax","t2","Kernels","idealLowpass","fc","fs","norm","FIRDesigner","design","kind","cutoffHz","order","window","win","applyWin","f1","f2","lp2","lp1","Error","apply","overlapAdd","blockSize","L","Nfft","B","xblk","Y","Xk","yblk","Bilinear","prewarp","fHz","tan","IIRDesigner","butterworthPoles","poles","push","cheby1Poles","rp","eps","pow","log","sinhA","sinh","coshA","cosh","pairConjugates","list","out","pair","q","bilinearBiquad","a1","a0","K","d0","fromPrototype","normalizeAt","sections","pairs","p1","p2","bPoly","aPoly","g","z0","reduce","acc","bi","ai","evalHzAtZ","gain","butterworth","pre","normZ","tf","orderFIR","cheby1","ZDomain","evalHz","zinv","num","den","freqz","H","wi","mag","phase","groupDelay","unwrapped","dw","gd","isStable","Filter","constructor","this","slice","_sosState","w1","w2","_firIdx","_firBuf","_iirW","reset","forEach","processSample","st","w0","y0","idx","wn","yn","applySignal","frequencyResponse","fr","f","toJSON","fromTF","designFIR","designButter","result","designCheby1","FIR","IIR","Z","index"],"mappings":"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"}